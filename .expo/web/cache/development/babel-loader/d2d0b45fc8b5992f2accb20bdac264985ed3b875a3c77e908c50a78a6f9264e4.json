{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { APP_CONFIG } from \"./src/constants/Config\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport WebViewComponent from \"./src/components/WebViewComponent\";\nimport AboutScreen from \"./src/screens/AboutScreen\";\nimport AboutInfoScreen from \"./src/screens/AboutInfoScreen\";\nimport UpdateScreen from \"./src/screens/UpdateScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { ThemeProvider, useTheme } from \"./src/contexts/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction MainTabs() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme,\n    isDarkMode = _useTheme.isDarkMode;\n  var _useState = useState('Home'),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshCount = _useState4[0],\n    setRefreshCount = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showUpdateModal = _useState6[0],\n    setShowUpdateModal = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showAboutInfoModal = _useState8[0],\n    setShowAboutInfoModal = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showSettingsModal = _useState0[0],\n    setShowSettingsModal = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    hasUpdate = _useState10[0],\n    setHasUpdate = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isCheckingUpdate = _useState12[0],\n    setIsCheckingUpdate = _useState12[1];\n  var handleRefresh = function handleRefresh() {\n    setRefreshCount(function (prev) {\n      return prev + 1;\n    });\n  };\n  var compareVersions = function compareVersions(currentVersion, latestVersion) {\n    return true;\n  };\n  var checkForUpdates = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (isCheckingUpdate) return;\n      setIsCheckingUpdate(true);\n      try {\n        var UPDATE_API_URL = 'https://www.sumi233.top/appupdate.json';\n        var response = yield fetch(UPDATE_API_URL);\n        var data = yield response.json();\n        var currentVersion = (APP_CONFIG == null ? void 0 : APP_CONFIG.VERSION) || '0.0.0';\n        var latestVersion = (data == null ? void 0 : data.latestVersion) || currentVersion;\n        var hasNewUpdate = compareVersions(currentVersion, latestVersion);\n        setHasUpdate(hasNewUpdate);\n      } catch (error) {\n        console.error('检查更新失败:', error);\n        setHasUpdate(false);\n      } finally {\n        setIsCheckingUpdate(false);\n      }\n    });\n    return function checkForUpdates() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    checkForUpdates();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Tab.Navigator, {\n      screenOptions: {\n        tabBarActiveTintColor: theme.colors.tabBarActive,\n        tabBarInactiveTintColor: theme.colors.tabBarInactive,\n        tabBarStyle: [styles.tabBar, {\n          backgroundColor: theme.colors.surface\n        }],\n        headerShown: false\n      },\n      onStateChange: function onStateChange(state) {\n        if (state.routes[state.index]) {\n          setActiveTab(state.routes[state.index].name);\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        options: {\n          tabBarLabel: '主页',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(Image, {\n              source: isDarkMode ? require(\"./assets/home-dark.svg\") : require(\"./assets/home-light.svg\"),\n              style: [styles.iconImage, {\n                width: size,\n                height: size,\n                tintColor: color\n              }],\n              resizeMode: \"contain\"\n            });\n          }\n        },\n        children: function children() {\n          return _jsx(WebViewComponent, {\n            url: \"https://www.sumi233.top\"\n          }, `home-${refreshCount}`);\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Archive\",\n        options: {\n          tabBarLabel: '归档',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(Image, {\n              source: isDarkMode ? require(\"./assets/archive-dark.svg\") : require(\"./assets/archive-light.svg\"),\n              style: [styles.iconImage, {\n                width: size,\n                height: size,\n                tintColor: color\n              }],\n              resizeMode: \"contain\"\n            });\n          }\n        },\n        children: function children() {\n          return _jsx(WebViewComponent, {\n            url: \"https://www.sumi233.top/archives\"\n          }, `archive-${refreshCount}`);\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Message\",\n        options: {\n          tabBarLabel: '留言板',\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n              size = _ref4.size;\n            return _jsx(Image, {\n              source: isDarkMode ? require(\"./assets/message-dark.svg\") : require(\"./assets/message-light.svg\"),\n              style: [styles.iconImage, {\n                width: size,\n                height: size,\n                tintColor: color\n              }],\n              resizeMode: \"contain\"\n            });\n          }\n        },\n        children: function children() {\n          return _jsx(WebViewComponent, {\n            url: \"https://www.sumi233.top/comments\"\n          }, `message-${refreshCount}`);\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"About\",\n        children: function children(_ref5) {\n          var navigation = _ref5.navigation;\n          return _jsx(AboutScreen, {\n            navigation: navigation,\n            onOpenSettings: function onOpenSettings() {\n              return setShowSettingsModal(true);\n            },\n            onOpenAboutInfo: function onOpenAboutInfo() {\n              return setShowAboutInfoModal(true);\n            },\n            onOpenUpdate: function onOpenUpdate() {\n              setShowUpdateModal(true);\n              checkForUpdates();\n            },\n            hasUpdate: hasUpdate\n          });\n        },\n        options: {\n          tabBarLabel: '更多',\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n              size = _ref6.size;\n            return _jsx(Image, {\n              source: isDarkMode ? require(\"./assets/about-dark.svg\") : require(\"./assets/about-light.svg\"),\n              style: [styles.iconImage, {\n                width: size,\n                height: size,\n                tintColor: color\n              }],\n              resizeMode: \"contain\"\n            });\n          }\n        }\n      })]\n    }), _jsx(Modal, {\n      visible: showUpdateModal,\n      animationType: \"slide\",\n      presentationStyle: \"pageSheet\",\n      onRequestClose: function onRequestClose() {\n        return setShowUpdateModal(false);\n      },\n      children: _jsx(UpdateScreen, {\n        onClose: function onClose() {\n          return setShowUpdateModal(false);\n        }\n      })\n    }), _jsx(Modal, {\n      visible: showAboutInfoModal,\n      animationType: \"slide\",\n      presentationStyle: \"pageSheet\",\n      onRequestClose: function onRequestClose() {\n        return setShowAboutInfoModal(false);\n      },\n      children: _jsx(AboutInfoScreen, {\n        onClose: function onClose() {\n          return setShowAboutInfoModal(false);\n        }\n      })\n    }), _jsx(Modal, {\n      visible: showSettingsModal,\n      animationType: \"slide\",\n      presentationStyle: \"pageSheet\",\n      onRequestClose: function onRequestClose() {\n        return setShowSettingsModal(false);\n      },\n      children: _jsx(SettingsScreen, {\n        onClose: function onClose() {\n          return setShowSettingsModal(false);\n        },\n        onOpenAboutInfo: function onOpenAboutInfo() {\n          setShowSettingsModal(false);\n          setShowAboutInfoModal(true);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.refreshButton, {\n        backgroundColor: theme.colors.primary\n      }, Platform.OS === 'web' && styles.webRefreshButton],\n      onPress: handleRefresh,\n      activeOpacity: 0.7,\n      children: _jsx(Image, {\n        source: isDarkMode ? require(\"./assets/refresh-dark.svg\") : require(\"./assets/refresh-light.svg\"),\n        style: styles.refreshIconImage,\n        resizeMode: \"contain\"\n      })\n    })]\n  });\n}\nfunction MainNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(MainTabs, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  tabBar: {\n    height: 60,\n    paddingBottom: 8,\n    paddingTop: 8\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    borderRadius: 12\n  },\n  iconImage: {},\n  refreshButton: {\n    position: 'absolute',\n    right: 20,\n    bottom: 80,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    backgroundColor: '#007AFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 6,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3\n  },\n  webRefreshButton: {\n    cursor: 'pointer',\n    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n  },\n  refreshIconImage: {\n    width: 24,\n    height: 24,\n    tintColor: '#FFFFFF'\n  }\n});\nfunction App() {\n  return _jsx(ThemeProvider, {\n    children: _jsx(MainNavigator, {})\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","APP_CONFIG","NavigationContainer","createBottomTabNavigator","View","Text","StyleSheet","TouchableOpacity","Platform","Modal","Image","WebViewComponent","AboutScreen","AboutInfoScreen","UpdateScreen","SettingsScreen","ThemeProvider","useTheme","jsx","_jsx","jsxs","_jsxs","Tab","MainTabs","_useTheme","theme","isDarkMode","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","refreshCount","setRefreshCount","_useState5","_useState6","showUpdateModal","setShowUpdateModal","_useState7","_useState8","showAboutInfoModal","setShowAboutInfoModal","_useState9","_useState0","showSettingsModal","setShowSettingsModal","_useState1","_useState10","hasUpdate","setHasUpdate","_useState11","_useState12","isCheckingUpdate","setIsCheckingUpdate","handleRefresh","prev","compareVersions","currentVersion","latestVersion","checkForUpdates","_ref","_asyncToGenerator","UPDATE_API_URL","response","fetch","data","json","VERSION","hasNewUpdate","error","console","apply","arguments","style","styles","container","children","Navigator","screenOptions","tabBarActiveTintColor","colors","tabBarActive","tabBarInactiveTintColor","tabBarInactive","tabBarStyle","tabBar","backgroundColor","surface","headerShown","onStateChange","state","routes","index","name","Screen","options","tabBarLabel","tabBarIcon","_ref2","color","size","source","require","iconImage","width","height","tintColor","resizeMode","url","_ref3","_ref4","_ref5","navigation","onOpenSettings","onOpenAboutInfo","onOpenUpdate","_ref6","visible","animationType","presentationStyle","onRequestClose","onClose","refreshButton","primary","OS","webRefreshButton","onPress","activeOpacity","refreshIconImage","MainNavigator","create","flex","position","paddingBottom","paddingTop","icon","borderRadius","right","bottom","justifyContent","alignItems","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","cursor","boxShadow","App"],"sources":["D:/sumiblogapph5/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { APP_CONFIG } from './src/constants/Config';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Platform, Modal, Image } from 'react-native';\r\nimport WebViewComponent from './src/components/WebViewComponent';\r\nimport AboutScreen from './src/screens/AboutScreen';\r\nimport AboutInfoScreen from './src/screens/AboutInfoScreen';\r\nimport UpdateScreen from './src/screens/UpdateScreen';\r\nimport SettingsScreen from './src/screens/SettingsScreen';\r\nimport { ThemeProvider, useTheme } from './src/contexts/ThemeContext';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// 底部标签导航组件\r\nfunction MainTabs() {\r\n  const { theme, isDarkMode } = useTheme();\r\n  const [activeTab, setActiveTab] = useState('Home');\r\n  const [refreshCount, setRefreshCount] = useState(0);\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n  const [showAboutInfoModal, setShowAboutInfoModal] = useState(false);\r\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n  const [hasUpdate, setHasUpdate] = useState(false);\r\n  const [isCheckingUpdate, setIsCheckingUpdate] = useState(false);\r\n\r\n  // 处理刷新操作\r\n  const handleRefresh = () => {\r\n    // 通过改变状态来触发WebViewComponent的重新加载\r\n    setRefreshCount(prev => prev + 1);\r\n  };\r\n\r\n  // 比较版本号的辅助函数\r\n  const compareVersions = (currentVersion, latestVersion) => {\r\n    // 为了测试，总是返回true表示有新版本\r\n    return true;\r\n    \r\n    // 实际比较逻辑（暂时注释）\r\n    /*\r\n    const currentParts = currentVersion.split('.').map(Number);\r\n    const latestParts = latestVersion.split('.').map(Number);\r\n    \r\n    for (let i = 0; i < Math.max(currentParts.length, latestParts.length); i++) {\r\n      const current = currentParts[i] || 0;\r\n      const latest = latestParts[i] || 0;\r\n      \r\n      if (latest > current) {\r\n        return true; // 有新版本\r\n      } else if (latest < current) {\r\n        return false; // 当前版本更新\r\n      }\r\n    }\r\n    return false; // 版本相同\r\n    */\r\n  };\r\n\r\n  // 检查更新\r\n  const checkForUpdates = async () => {\r\n    if (isCheckingUpdate) return;\r\n    \r\n    setIsCheckingUpdate(true);\r\n    try {\r\n      // 这里使用UpdateScreen中的相同API\r\n      const UPDATE_API_URL = 'https://www.sumi233.top/appupdate.json';\r\n      const response = await fetch(UPDATE_API_URL);\r\n      const data = await response.json();\r\n      \r\n      // 比较版本号来检查是否有更新\r\n      const currentVersion = APP_CONFIG?.VERSION || '0.0.0';\r\n      const latestVersion = data?.latestVersion || currentVersion;\r\n      \r\n      // 使用辅助函数比较版本\r\n      const hasNewUpdate = compareVersions(currentVersion, latestVersion);\r\n      \r\n      setHasUpdate(hasNewUpdate);\r\n    } catch (error) {\r\n      console.error('检查更新失败:', error);\r\n      // 默认设为没有更新\r\n      setHasUpdate(false);\r\n    } finally {\r\n      setIsCheckingUpdate(false);\r\n    }\r\n  };\r\n\r\n  // 组件挂载时检查更新\r\n  useEffect(() => {\r\n    checkForUpdates();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Tab.Navigator\r\n        screenOptions={{\r\n          tabBarActiveTintColor: theme.colors.tabBarActive, // 使用主题颜色\r\n          tabBarInactiveTintColor: theme.colors.tabBarInactive,\r\n          tabBarStyle: [styles.tabBar, { backgroundColor: theme.colors.surface }],\r\n          headerShown: false,\r\n        }}\r\n        onStateChange={(state) => {\r\n          // 监听当前激活的标签页\r\n          if (state.routes[state.index]) {\r\n            setActiveTab(state.routes[state.index].name);\r\n          }\r\n        }}\r\n      >\r\n        <Tab.Screen \r\n          name=\"Home\" \r\n          options={{ \r\n            tabBarLabel: '主页',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Image \r\n                source={isDarkMode ? \r\n                  require('./assets/home-dark.svg') : \r\n                  require('./assets/home-light.svg')} \r\n                style={[styles.iconImage, { width: size, height: size, tintColor: color }]} \r\n                resizeMode=\"contain\"\r\n              />\r\n            )\r\n          }} \r\n        >\r\n          {() => <WebViewComponent key={`home-${refreshCount}`} url=\"https://www.sumi233.top\" />}\r\n        </Tab.Screen>\r\n        <Tab.Screen \r\n          name=\"Archive\" \r\n          options={{ \r\n            tabBarLabel: '归档',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Image \r\n                source={isDarkMode ? \r\n                  require('./assets/archive-dark.svg') : \r\n                  require('./assets/archive-light.svg')} \r\n                style={[styles.iconImage, { width: size, height: size, tintColor: color }]} \r\n                resizeMode=\"contain\"\r\n              />\r\n            )\r\n          }} \r\n        >\r\n          {() => <WebViewComponent key={`archive-${refreshCount}`} url=\"https://www.sumi233.top/archives\" />}\r\n        </Tab.Screen>\r\n        <Tab.Screen \r\n          name=\"Message\" \r\n          options={{ \r\n            tabBarLabel: '留言板',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Image \r\n                source={isDarkMode ? \r\n                  require('./assets/message-dark.svg') : \r\n                  require('./assets/message-light.svg')} \r\n                style={[styles.iconImage, { width: size, height: size, tintColor: color }]} \r\n                resizeMode=\"contain\"\r\n              />\r\n            )\r\n          }} \r\n        >\r\n          {() => <WebViewComponent key={`message-${refreshCount}`} url=\"https://www.sumi233.top/comments\" />}\r\n        </Tab.Screen>\r\n        <Tab.Screen \r\n          name=\"About\" \r\n            children={({ navigation }) => (\r\n              <AboutScreen \r\n                navigation={navigation} \r\n                onOpenSettings={() => setShowSettingsModal(true)}\r\n                onOpenAboutInfo={() => setShowAboutInfoModal(true)}\r\n                onOpenUpdate={() => {\r\n                  setShowUpdateModal(true);\r\n                  // 打开更新页面时重新检查更新\r\n                  checkForUpdates();\r\n                }}\r\n                hasUpdate={hasUpdate}\r\n              />\r\n            )}\r\n            options={{ \r\n              tabBarLabel: '更多',\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Image \r\n                  source={isDarkMode ? \r\n                    require('./assets/about-dark.svg') : \r\n                    require('./assets/about-light.svg')} \r\n                  style={[styles.iconImage, { width: size, height: size, tintColor: color }]} \r\n                  resizeMode=\"contain\"\r\n                />\r\n              )\r\n            }} \r\n          />\r\n      </Tab.Navigator>\r\n\r\n      {/* 更新页面Modal */}\r\n      <Modal\r\n        visible={showUpdateModal}\r\n        animationType=\"slide\"\r\n        presentationStyle=\"pageSheet\"\r\n        onRequestClose={() => setShowUpdateModal(false)}\r\n      >\r\n        <UpdateScreen onClose={() => setShowUpdateModal(false)} />\r\n      </Modal>\r\n\r\n      {/* 关于详情页面Modal */}\r\n      <Modal\r\n        visible={showAboutInfoModal}\r\n        animationType=\"slide\"\r\n        presentationStyle=\"pageSheet\"\r\n        onRequestClose={() => setShowAboutInfoModal(false)}\r\n      >\r\n        <AboutInfoScreen onClose={() => setShowAboutInfoModal(false)} />\r\n      </Modal>\r\n\r\n      {/* 设置页面Modal */}\r\n      <Modal\r\n        visible={showSettingsModal}\r\n        animationType=\"slide\"\r\n        presentationStyle=\"pageSheet\"\r\n        onRequestClose={() => setShowSettingsModal(false)}\r\n      >\r\n        <SettingsScreen \r\n          onClose={() => setShowSettingsModal(false)}\r\n          onOpenAboutInfo={() => {\r\n            setShowSettingsModal(false);\r\n            setShowAboutInfoModal(true);\r\n          }}\r\n        />\r\n      </Modal>\r\n\r\n      {/* 悬浮刷新按钮 */}\r\n      <TouchableOpacity \r\n        style={[\r\n          styles.refreshButton, \r\n          { backgroundColor: theme.colors.primary }, // 使用主题颜色\r\n          Platform.OS === 'web' && styles.webRefreshButton\r\n        ]}\r\n        onPress={handleRefresh}\r\n        activeOpacity={0.7}\r\n      >\r\n        <Image \r\n          source={isDarkMode ? \r\n            require('./assets/refresh-dark.svg') : \r\n            require('./assets/refresh-light.svg')} \r\n          style={styles.refreshIconImage} \r\n          resizeMode=\"contain\"\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\n// 主导航组件\r\nfunction MainNavigator() {\r\n  return (\r\n    <NavigationContainer>\r\n      <MainTabs />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    position: 'relative',\r\n  },\r\n  tabBar: {\r\n    height: 60,\r\n    paddingBottom: 8,\r\n    paddingTop: 8,\r\n  },\r\n  icon: {\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n  },\r\n  iconImage: {\r\n    // 图标样式会通过tabBarIcon的size参数设置\r\n  },\r\n  refreshButton: {\r\n    position: 'absolute',\r\n    right: 20,\r\n    bottom: 80, // 位于底部导航栏上方\r\n    width: 56,\r\n    height: 56,\r\n    borderRadius: 28,\r\n    backgroundColor: '#007AFF',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    elevation: 6,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n  },\r\n  webRefreshButton: {\r\n    cursor: 'pointer',\r\n    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)',\r\n  },\r\n  refreshIconImage: {\r\n    width: 24,\r\n    height: 24,\r\n    tintColor: '#FFFFFF',\r\n  },\r\n});\r\n\r\n// 主应用组件，包装ThemeProvider\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <MainNavigator />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}