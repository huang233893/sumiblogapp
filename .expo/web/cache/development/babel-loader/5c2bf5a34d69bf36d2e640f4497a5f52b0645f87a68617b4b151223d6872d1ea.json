{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useRef, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WebViewComponent = function WebViewComponent(_ref) {\n  var url = _ref.url;\n  var iframeRef = useRef(null);\n  var webViewRef = useRef(null);\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme,\n    isDarkMode = _useTheme.isDarkMode;\n  var isHomePage = url === 'https://www.sumi233.top/' || url === 'https://www.sumi233.top';\n  var toggleDarkModeJs = function toggleDarkModeJs(darkMode) {\n    return `\n    // 创建或更新深色模式样式\n    let darkModeStyle = document.getElementById('dark-mode-style');\n    if (!darkModeStyle) {\n      darkModeStyle = document.createElement('style');\n      darkModeStyle.id = 'dark-mode-style';\n      document.head.appendChild(darkModeStyle);\n    }\n\n    if (${darkMode}) {\n      // 深色模式样式\n      darkModeStyle.textContent = \\`\n        body {\n          background-color: #121212 !important;\n          color: #e0e0e0 !important;\n        }\n        \n        /* 通用元素深色模式 */\n        .site-nav, header, .header, #header, .navbar, .top-bar {\n          background-color: #1e1e1e !important;\n          color: #e0e0e0 !important;\n          border-bottom-color: #333 !important;\n        }\n        \n        /* 内容区域 */\n        .main, .content, .post-content, article {\n          background-color: #121212 !important;\n          color: #e0e0e0 !important;\n        }\n        \n        /* 卡片和容器 */\n        .card, .entry, .article, .post {\n          background-color: #1e1e1e !important;\n          color: #e0e0e0 !important;\n          border-color: #333 !important;\n        }\n        \n        /* 文本元素 */\n        h1, h2, h3, h4, h5, h6, p, span, a {\n          color: #e0e0e0 !important;\n        }\n        \n        a:hover {\n          color: #FF9500 !important;\n        }\n        \n        /* 输入框和表单元素 */\n        input, textarea, select, button {\n          background-color: #2c2c2c !important;\n          color: #e0e0e0 !important;\n          border-color: #444 !important;\n        }\n        \n        /* 代码块 */\n        pre, code {\n          background-color: #2c2c2c !important;\n          color: #f8f8f2 !important;\n        }\n        \n        /* 链接 */\n        .site-name, .site-nav a {\n          color: #e0e0e0 !important;\n        }\n        \n        /* 覆盖可能的亮色主题 */\n        .theme-light, .light-theme, .day-theme {\n          display: none !important;\n        }\n      \\`;\n    } else {\n      // 移除深色模式样式\n      darkModeStyle.textContent = '';\n    }\n    \n    true;\n  `;\n  };\n  if (Platform.OS === 'web') {\n    useEffect(function () {\n      setIsLoading(true);\n      if (iframeRef.current) {\n        var iframe = iframeRef.current;\n        iframe.style.width = '100%';\n        iframe.style.height = '100%';\n        iframe.style.border = 'none';\n        iframe.style.position = 'relative';\n        if (isHomePage) {\n          iframe.style.marginTop = '0';\n          iframe.style.height = '100%';\n        }\n        var handleLoad = function handleLoad() {\n          try {\n            setTimeout(function () {\n              if (!isHomePage) {\n                try {\n                  if (iframe.contentWindow) {\n                    iframe.contentWindow.scrollTo(0, 60);\n                  }\n                } catch (scrollError) {\n                  iframe.style.marginTop = '-60px';\n                  iframe.style.height = 'calc(100% + 60px)';\n                }\n              }\n              setIsLoading(false);\n            }, 300);\n          } catch (error) {\n            console.error('处理iframe加载失败:', error);\n            setIsLoading(false);\n          }\n        };\n        iframe.onload = handleLoad;\n        return function () {\n          iframe.onload = null;\n        };\n      }\n    }, [url, isHomePage]);\n    return _jsxs(View, {\n      style: [styles.webview, {\n        backgroundColor: theme.colors.background\n      }],\n      children: [isLoading && _jsxs(View, {\n        style: [styles.loadingContainer, {\n          backgroundColor: theme.colors.background\n        }],\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: theme.colors.primary\n        }), _jsx(Text, {\n          style: [styles.loadingText, {\n            color: theme.colors.textSecondary\n          }],\n          children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9...\"\n        })]\n      }), _jsx(\"iframe\", {\n        ref: iframeRef,\n        src: url,\n        style: {\n          width: '100%',\n          height: '100%',\n          border: 'none',\n          position: 'relative'\n        },\n        title: \"Web Content\",\n        loading: \"lazy\"\n      })]\n    });\n  }\n  try {\n    var _require = require('react-native-webview'),\n      WebView = _require.WebView;\n    var injectedJavaScript = `\n          // 隐藏酥米的小站特定顶栏元素\n          const hideSumiBlogHeader = () => {\n            // 隐藏顶栏\n            const siteNav = document.querySelector('.site-nav');\n            if (siteNav) {\n              siteNav.style.display = 'none';\n              siteNav.style.visibility = 'hidden';\n            }\n            \n            // 隐藏其他可能的顶栏元素\n            const headers = document.querySelectorAll('header, .header, #header, .navbar, .top-bar');\n            headers.forEach(element => {\n              element.style.display = 'none';\n              element.style.visibility = 'hidden';\n            });\n            \n            // 调整内容区域\n            const mainContent = document.querySelector('.main');\n            if (mainContent) {\n              mainContent.style.marginTop = '0 !important';\n              mainContent.style.width = '100%';\n            }\n          };\n          \n          // 只在非主页隐藏顶栏\n          ${!isHomePage ? 'hideSumiBlogHeader();' : ''}\n          \n          // 如果是归档页面，添加额外处理\n          if (window.location.pathname.includes('archives')) {\n            const mainTitle = document.querySelector('.post-title');\n            if (mainTitle) {\n              mainTitle.style.marginTop = '0';\n            }\n          }\n          \n          // 应用深色模式\n          ${toggleDarkModeJs(isDarkMode)}\n          \n          true;\n      `;\n    useEffect(function () {\n      if (Platform.OS !== 'web' && webViewRef.current && !isLoading) {\n        webViewRef.current.injectJavaScript(toggleDarkModeJs(isDarkMode));\n      }\n    }, [isDarkMode]);\n    return _jsxs(View, {\n      style: [styles.webview, {\n        backgroundColor: theme.colors.background\n      }],\n      children: [isLoading && _jsxs(View, {\n        style: [styles.loadingContainer, {\n          backgroundColor: theme.colors.background\n        }],\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: theme.colors.primary\n        }), _jsx(Text, {\n          style: [styles.loadingText, {\n            color: theme.colors.textSecondary\n          }],\n          children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9...\"\n        })]\n      }), _jsx(WebView, {\n        ref: webViewRef,\n        source: {\n          uri: url\n        },\n        style: [styles.webview, {\n          backgroundColor: theme.colors.background\n        }],\n        javaScriptEnabled: true,\n        domStorageEnabled: true,\n        startInLoadingState: true,\n        scalesPageToFit: true,\n        injectedJavaScript: injectedJavaScript,\n        injectedJavaScriptBeforeContentLoaded: injectedJavaScript,\n        onLoadStart: function onLoadStart() {\n          return setIsLoading(true);\n        },\n        onLoadEnd: function onLoadEnd() {\n          setTimeout(function () {\n            setIsLoading(false);\n          }, 300);\n        },\n        javaScriptCanOpenWindowsAutomatically: false,\n        originWhitelist: ['*'],\n        backgroundColor: theme.colors.background\n      })]\n    });\n  } catch (error) {\n    return _jsx(View, {\n      style: [styles.errorContainer, {\n        backgroundColor: theme.colors.background\n      }],\n      children: _jsx(Text, {\n        style: [styles.errorText, {\n          color: theme.colors.textSecondary\n        }],\n        children: \"\\u65E0\\u6CD5\\u52A0\\u8F7DWebView\\u7EC4\\u4EF6\"\n      })\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  webview: {\n    flex: 1,\n    position: 'relative'\n  },\n  loadingContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: '#ffffff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 9999\n  }),\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#666'\n  }\n});\nexport default WebViewComponent;","map":{"version":3,"names":["React","useRef","useEffect","useState","StyleSheet","Platform","View","Text","ActivityIndicator","useTheme","jsx","_jsx","jsxs","_jsxs","WebViewComponent","_ref","url","iframeRef","webViewRef","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useTheme","theme","isDarkMode","isHomePage","toggleDarkModeJs","darkMode","OS","current","iframe","style","width","height","border","position","marginTop","handleLoad","setTimeout","contentWindow","scrollTo","scrollError","error","console","onload","styles","webview","backgroundColor","colors","background","children","loadingContainer","size","color","primary","loadingText","textSecondary","ref","src","title","loading","_require","require","WebView","injectedJavaScript","injectJavaScript","source","uri","javaScriptEnabled","domStorageEnabled","startInLoadingState","scalesPageToFit","injectedJavaScriptBeforeContentLoaded","onLoadStart","onLoadEnd","javaScriptCanOpenWindowsAutomatically","originWhitelist","errorContainer","errorText","create","flex","_objectSpread","absoluteFillObject","justifyContent","alignItems","zIndex","fontSize"],"sources":["D:/sumiblogapph5/src/components/WebViewComponent.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { StyleSheet, Platform, View, Text, ActivityIndicator } from 'react-native';\nimport { useTheme } from '../contexts/ThemeContext';\n\nconst WebViewComponent = ({ url }) => {\n  const iframeRef = useRef(null);\n  const webViewRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { theme, isDarkMode } = useTheme();\n  \n  // 更宽松的主页判断逻辑，确保主页顶栏不被隐藏\n  const isHomePage = url === 'https://www.sumi233.top/' || url === 'https://www.sumi233.top';\n\n  // 切换深色模式的JavaScript代码（仅用于原生平台）\n  const toggleDarkModeJs = (darkMode) => `\n    // 创建或更新深色模式样式\n    let darkModeStyle = document.getElementById('dark-mode-style');\n    if (!darkModeStyle) {\n      darkModeStyle = document.createElement('style');\n      darkModeStyle.id = 'dark-mode-style';\n      document.head.appendChild(darkModeStyle);\n    }\n\n    if (${darkMode}) {\n      // 深色模式样式\n      darkModeStyle.textContent = \\`\n        body {\n          background-color: #121212 !important;\n          color: #e0e0e0 !important;\n        }\n        \n        /* 通用元素深色模式 */\n        .site-nav, header, .header, #header, .navbar, .top-bar {\n          background-color: #1e1e1e !important;\n          color: #e0e0e0 !important;\n          border-bottom-color: #333 !important;\n        }\n        \n        /* 内容区域 */\n        .main, .content, .post-content, article {\n          background-color: #121212 !important;\n          color: #e0e0e0 !important;\n        }\n        \n        /* 卡片和容器 */\n        .card, .entry, .article, .post {\n          background-color: #1e1e1e !important;\n          color: #e0e0e0 !important;\n          border-color: #333 !important;\n        }\n        \n        /* 文本元素 */\n        h1, h2, h3, h4, h5, h6, p, span, a {\n          color: #e0e0e0 !important;\n        }\n        \n        a:hover {\n          color: #FF9500 !important;\n        }\n        \n        /* 输入框和表单元素 */\n        input, textarea, select, button {\n          background-color: #2c2c2c !important;\n          color: #e0e0e0 !important;\n          border-color: #444 !important;\n        }\n        \n        /* 代码块 */\n        pre, code {\n          background-color: #2c2c2c !important;\n          color: #f8f8f2 !important;\n        }\n        \n        /* 链接 */\n        .site-name, .site-nav a {\n          color: #e0e0e0 !important;\n        }\n        \n        /* 覆盖可能的亮色主题 */\n        .theme-light, .light-theme, .day-theme {\n          display: none !important;\n        }\n      \\`;\n    } else {\n      // 移除深色模式样式\n      darkModeStyle.textContent = '';\n    }\n    \n    true;\n  `;\n\n  // 在Web平台上使用iframe\n  if (Platform.OS === 'web') {\n    useEffect(() => {\n      setIsLoading(true);\n      \n      if (iframeRef.current) {\n        const iframe = iframeRef.current;\n        \n        // 重置iframe样式\n        iframe.style.width = '100%';\n        iframe.style.height = '100%';\n        iframe.style.border = 'none';\n        iframe.style.position = 'relative';\n        \n        // 优化：为主页移除所有可能隐藏顶栏的样式\n        if (isHomePage) {\n          iframe.style.marginTop = '0';\n          iframe.style.height = '100%';\n        }\n        \n        // 当iframe加载完成后处理\n        const handleLoad = () => {\n          try {\n            // 优化：减少延迟时间，提高加载速度\n            setTimeout(() => {\n              // 只在非主页执行隐藏顶栏操作\n              if (!isHomePage) {\n                try {\n                  // 尝试滚动iframe内容以隐藏顶栏\n                  if (iframe.contentWindow) {\n                    iframe.contentWindow.scrollTo(0, 60);\n                  }\n                } catch (scrollError) {\n                  // 如果无法滚动，尝试添加负边距\n                  iframe.style.marginTop = '-60px';\n                  iframe.style.height = 'calc(100% + 60px)';\n                }\n              }\n              \n              // 加载完成，隐藏加载页面（由于同源策略，无法直接修改iframe内容）\n              setIsLoading(false);\n            }, 300); // 减少延迟到300ms，提高加载速度\n          } catch (error) {\n            console.error('处理iframe加载失败:', error);\n            setIsLoading(false); // 即使出错也显示内容\n          }\n        };\n\n        iframe.onload = handleLoad;\n\n        return () => {\n          iframe.onload = null;\n        };\n      }\n    }, [url, isHomePage]);\n\n    return (\n      <View style={[styles.webview, { backgroundColor: theme.colors.background }]}>\n        {isLoading && (\n          <View style={[styles.loadingContainer, { backgroundColor: theme.colors.background }]}>\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n            <Text style={[styles.loadingText, { color: theme.colors.textSecondary }]}>正在加载内容...</Text>\n          </View>\n        )}\n        <iframe \n          ref={iframeRef}\n          src={url} \n          style={{ \n            width: '100%', \n            height: '100%', \n            border: 'none',\n            position: 'relative'\n          }}\n          title=\"Web Content\"\n          loading=\"lazy\" // 添加懒加载优化\n        />\n      </View>\n    );\n  }\n  \n  // 在原生平台上使用WebView\n  try {\n    const { WebView } = require('react-native-webview');\n    \n    // 只有非主页才注入隐藏顶栏的JavaScript代码\n    // 生成注入的JavaScript代码，包含深色模式切换\n        const injectedJavaScript = `\n          // 隐藏酥米的小站特定顶栏元素\n          const hideSumiBlogHeader = () => {\n            // 隐藏顶栏\n            const siteNav = document.querySelector('.site-nav');\n            if (siteNav) {\n              siteNav.style.display = 'none';\n              siteNav.style.visibility = 'hidden';\n            }\n            \n            // 隐藏其他可能的顶栏元素\n            const headers = document.querySelectorAll('header, .header, #header, .navbar, .top-bar');\n            headers.forEach(element => {\n              element.style.display = 'none';\n              element.style.visibility = 'hidden';\n            });\n            \n            // 调整内容区域\n            const mainContent = document.querySelector('.main');\n            if (mainContent) {\n              mainContent.style.marginTop = '0 !important';\n              mainContent.style.width = '100%';\n            }\n          };\n          \n          // 只在非主页隐藏顶栏\n          ${!isHomePage ? 'hideSumiBlogHeader();' : ''}\n          \n          // 如果是归档页面，添加额外处理\n          if (window.location.pathname.includes('archives')) {\n            const mainTitle = document.querySelector('.post-title');\n            if (mainTitle) {\n              mainTitle.style.marginTop = '0';\n            }\n          }\n          \n          // 应用深色模式\n          ${toggleDarkModeJs(isDarkMode)}\n          \n          true;\n      `;\n    \n    // 在原生平台上，当深色模式变化时，重新注入JavaScript来更新网页主题\n    useEffect(() => {\n      if (Platform.OS !== 'web' && webViewRef.current && !isLoading) {\n        webViewRef.current.injectJavaScript(toggleDarkModeJs(isDarkMode));\n      }\n    }, [isDarkMode]);\n\n    return (\n      <View style={[styles.webview, { backgroundColor: theme.colors.background }]}>\n        {isLoading && (\n          <View style={[styles.loadingContainer, { backgroundColor: theme.colors.background }]}>\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n            <Text style={[styles.loadingText, { color: theme.colors.textSecondary }]}>正在加载内容...</Text>\n          </View>\n        )}\n        <WebView\n          ref={webViewRef}\n          source={{ uri: url }}\n          style={[styles.webview, { backgroundColor: theme.colors.background }]}\n          javaScriptEnabled={true}\n          domStorageEnabled={true}\n          startInLoadingState={true}\n          scalesPageToFit={true}\n          injectedJavaScript={injectedJavaScript}\n          injectedJavaScriptBeforeContentLoaded={injectedJavaScript}\n          onLoadStart={() => setIsLoading(true)}\n          onLoadEnd={() => {\n            // 优化：减少延迟时间\n            setTimeout(() => {\n              setIsLoading(false);\n            }, 300); // 减少延迟到300ms\n          }}\n          // 添加性能优化参数\n          javaScriptCanOpenWindowsAutomatically={false}\n          originWhitelist={['*']}\n          // 根据主题模式设置WebView背景\n          backgroundColor={theme.colors.background}\n        />\n      </View>\n    );\n  } catch (error) {\n    return (\n      <View style={[styles.errorContainer, { backgroundColor: theme.colors.background }]}>\n        <Text style={[styles.errorText, { color: theme.colors.textSecondary }]}>无法加载WebView组件</Text>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  webview: {\n    flex: 1,\n    position: 'relative',\n  },\n  loadingContainer: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#ffffff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 9999,\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#666',\n  },\n});\n\nexport default WebViewComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}