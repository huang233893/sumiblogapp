{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WebViewComponent = function WebViewComponent(_ref) {\n  var url = _ref.url;\n  var iframeRef = useRef(null);\n  if (Platform.OS === 'web') {\n    useEffect(function () {\n      var hideHeader = function hideHeader() {\n        if (iframeRef.current && iframeRef.current.contentWindow) {\n          try {\n            var script = `\n              // 常见的顶栏元素选择器\n              const headerSelectors = [\n                'header', \n                '.header', \n                '#header',\n                '.navbar',\n                '#navbar',\n                '.top-bar',\n                '#top-bar',\n                '.site-header',\n                '#site-header',\n                '.site-nav',\n                '.header-top',\n                '#header-top'\n              ];\n\n              // 尝试隐藏所有可能的顶栏元素\n              headerSelectors.forEach(selector => {\n                const elements = document.querySelectorAll(selector);\n                elements.forEach(element => {\n                  element.style.display = 'none';\n                  element.style.visibility = 'hidden';\n                  element.style.height = '0';\n                  element.style.margin = '0';\n                  element.style.padding = '0';\n                });\n              });\n\n              // 特别处理酥米的小站的特定元素\n              const customElements = document.querySelectorAll('.site-nav, .header, .header-top');\n              customElements.forEach(element => {\n                element.style.display = 'none';\n                element.style.visibility = 'hidden';\n              });\n\n              // 调整内容区域的边距和样式\n              const mainContent = document.querySelector('main, .main, #main, .content, #content, .container');\n              if (mainContent) {\n                mainContent.style.marginTop = '0';\n                mainContent.style.paddingTop = '0';\n              }\n\n              // 也尝试调整body和html标签的样式\n              document.body.style.margin = '0';\n              document.body.style.padding = '0';\n              document.documentElement.style.margin = '0';\n              document.documentElement.style.padding = '0';\n            `;\n            iframeRef.current.contentWindow.document.open();\n            iframeRef.current.contentWindow.document.write(`\n              <html>\n                <head>\n                  <script>\n                    window.onload = function() {\n                      ${script}\n                    };\n                  </script>\n                </head>\n                <body>\n                  <iframe \n                    src=\"${url}\" \n                    style=\"width:100%; height:100%; border:none; position:absolute; top:0; left:0;\" \n                    sandbox=\"allow-scripts allow-same-origin\">\n                  </iframe>\n                </body>\n              </html>\n            `);\n            iframeRef.current.contentWindow.document.close();\n          } catch (error) {\n            console.error('无法注入JavaScript代码:', error);\n            try {\n              iframeRef.current.contentWindow.eval(`\n                // 常见的顶栏元素选择器\n                const headerSelectors = [\n                  'header', \n                  '.header', \n                  '#header',\n                  '.navbar',\n                  '#navbar',\n                  '.top-bar',\n                  '#top-bar',\n                  '.site-header',\n                  '#site-header',\n                  '.site-nav',\n                  '.header-top'\n                ];\n\n                // 尝试隐藏所有可能的顶栏元素\n                headerSelectors.forEach(selector => {\n                  const elements = document.querySelectorAll(selector);\n                  elements.forEach(element => {\n                    element.style.display = 'none';\n                    element.style.visibility = 'hidden';\n                  });\n                });\n\n                // 调整内容区域的边距\n                const mainContent = document.querySelector('main, .main, #main, .content, #content');\n                if (mainContent) {\n                  mainContent.style.marginTop = '0';\n                }\n              `);\n            } catch (evalError) {\n              console.error('使用eval注入JavaScript失败:', evalError);\n            }\n          }\n        }\n      };\n      var iframe = iframeRef.current;\n      if (iframe) {\n        iframe.onload = hideHeader;\n      }\n      var timer1 = setTimeout(hideHeader, 1000);\n      var timer2 = setTimeout(hideHeader, 3000);\n      return function () {\n        clearTimeout(timer1);\n        clearTimeout(timer2);\n        if (iframe) {\n          iframe.onload = null;\n        }\n      };\n    }, [url]);\n    return _jsx(View, {\n      style: styles.webview,\n      children: _jsx(\"iframe\", {\n        ref: iframeRef,\n        src: url,\n        style: {\n          width: '100%',\n          height: '100%',\n          border: 'none'\n        },\n        title: \"Web Content\"\n      })\n    });\n  }\n  try {\n    var _require = require('react-native-webview'),\n      WebView = _require.WebView;\n    var injectedJavaScript = `\n      (function() {\n        // 常见的顶栏元素选择器\n        const headerSelectors = [\n          'header', \n          '.header', \n          '#header',\n          '.navbar',\n          '#navbar',\n          '.top-bar',\n          '#top-bar',\n          '.site-header',\n          '#site-header',\n          '.site-nav',\n          '.header-top'\n        ];\n\n        // 尝试隐藏所有可能的顶栏元素\n        headerSelectors.forEach(selector => {\n          const elements = document.querySelectorAll(selector);\n          elements.forEach(element => {\n            element.style.display = 'none';\n            element.style.visibility = 'hidden';\n            element.style.height = '0';\n            element.style.margin = '0';\n            element.style.padding = '0';\n          });\n        });\n\n        // 调整内容区域的边距和样式\n        const mainContent = document.querySelector('main, .main, #main, .content, #content, .container');\n        if (mainContent) {\n          mainContent.style.marginTop = '0';\n          mainContent.style.paddingTop = '0';\n        }\n\n        // 也尝试调整body和html标签的样式\n        document.body.style.margin = '0';\n        document.body.style.padding = '0';\n        document.documentElement.style.margin = '0';\n        document.documentElement.style.padding = '0';\n\n        return true;\n      })();\n    `;\n    return _jsx(WebView, {\n      source: {\n        uri: url\n      },\n      style: styles.webview,\n      javaScriptEnabled: true,\n      domStorageEnabled: true,\n      startInLoadingState: true,\n      scalesPageToFit: true,\n      injectedJavaScript: injectedJavaScript,\n      injectedJavaScriptBeforeContentLoaded: injectedJavaScript\n    });\n  } catch (error) {\n    return _jsx(View, {\n      style: styles.errorContainer,\n      children: _jsx(Text, {\n        style: styles.errorText,\n        children: \"\\u65E0\\u6CD5\\u52A0\\u8F7DWebView\\u7EC4\\u4EF6\"\n      })\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  webview: {\n    flex: 1\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#666'\n  }\n});\nexport default WebViewComponent;","map":{"version":3,"names":["React","useRef","useEffect","StyleSheet","Platform","View","Text","jsx","_jsx","WebViewComponent","_ref","url","iframeRef","OS","hideHeader","current","contentWindow","script","document","open","write","close","error","console","eval","evalError","iframe","onload","timer1","setTimeout","timer2","clearTimeout","style","styles","webview","children","ref","src","width","height","border","title","_require","require","WebView","injectedJavaScript","source","uri","javaScriptEnabled","domStorageEnabled","startInLoadingState","scalesPageToFit","injectedJavaScriptBeforeContentLoaded","errorContainer","errorText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","color"],"sources":["D:/sumiblogapph5/src/components/WebViewComponent.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { StyleSheet, Platform, View, Text } from 'react-native';\n\nconst WebViewComponent = ({ url }) => {\n  const iframeRef = useRef(null);\n\n  // 在Web平台上使用iframe作为React Native WebView的替代\n  if (Platform.OS === 'web') {\n    useEffect(() => {\n      // 直接向iframe注入JavaScript来隐藏顶栏\n      const hideHeader = () => {\n        if (iframeRef.current && iframeRef.current.contentWindow) {\n          try {\n            // 直接注入JavaScript代码\n            const script = `\n              // 常见的顶栏元素选择器\n              const headerSelectors = [\n                'header', \n                '.header', \n                '#header',\n                '.navbar',\n                '#navbar',\n                '.top-bar',\n                '#top-bar',\n                '.site-header',\n                '#site-header',\n                '.site-nav',\n                '.header-top',\n                '#header-top'\n              ];\n\n              // 尝试隐藏所有可能的顶栏元素\n              headerSelectors.forEach(selector => {\n                const elements = document.querySelectorAll(selector);\n                elements.forEach(element => {\n                  element.style.display = 'none';\n                  element.style.visibility = 'hidden';\n                  element.style.height = '0';\n                  element.style.margin = '0';\n                  element.style.padding = '0';\n                });\n              });\n\n              // 特别处理酥米的小站的特定元素\n              const customElements = document.querySelectorAll('.site-nav, .header, .header-top');\n              customElements.forEach(element => {\n                element.style.display = 'none';\n                element.style.visibility = 'hidden';\n              });\n\n              // 调整内容区域的边距和样式\n              const mainContent = document.querySelector('main, .main, #main, .content, #content, .container');\n              if (mainContent) {\n                mainContent.style.marginTop = '0';\n                mainContent.style.paddingTop = '0';\n              }\n\n              // 也尝试调整body和html标签的样式\n              document.body.style.margin = '0';\n              document.body.style.padding = '0';\n              document.documentElement.style.margin = '0';\n              document.documentElement.style.padding = '0';\n            `;\n\n            // 使用execCommand方法执行JavaScript\n            iframeRef.current.contentWindow.document.open();\n            iframeRef.current.contentWindow.document.write(`\n              <html>\n                <head>\n                  <script>\n                    window.onload = function() {\n                      ${script}\n                    };\n                  </script>\n                </head>\n                <body>\n                  <iframe \n                    src=\"${url}\" \n                    style=\"width:100%; height:100%; border:none; position:absolute; top:0; left:0;\" \n                    sandbox=\"allow-scripts allow-same-origin\">\n                  </iframe>\n                </body>\n              </html>\n            `);\n            iframeRef.current.contentWindow.document.close();\n          } catch (error) {\n            console.error('无法注入JavaScript代码:', error);\n            \n            // 如果第一种方法失败，尝试使用contentWindow.eval\n            try {\n              iframeRef.current.contentWindow.eval(`\n                // 常见的顶栏元素选择器\n                const headerSelectors = [\n                  'header', \n                  '.header', \n                  '#header',\n                  '.navbar',\n                  '#navbar',\n                  '.top-bar',\n                  '#top-bar',\n                  '.site-header',\n                  '#site-header',\n                  '.site-nav',\n                  '.header-top'\n                ];\n\n                // 尝试隐藏所有可能的顶栏元素\n                headerSelectors.forEach(selector => {\n                  const elements = document.querySelectorAll(selector);\n                  elements.forEach(element => {\n                    element.style.display = 'none';\n                    element.style.visibility = 'hidden';\n                  });\n                });\n\n                // 调整内容区域的边距\n                const mainContent = document.querySelector('main, .main, #main, .content, #content');\n                if (mainContent) {\n                  mainContent.style.marginTop = '0';\n                }\n              `);\n            } catch (evalError) {\n              console.error('使用eval注入JavaScript失败:', evalError);\n            }\n          }\n        }\n      };\n\n      // 添加加载完成事件监听器\n      const iframe = iframeRef.current;\n      if (iframe) {\n        iframe.onload = hideHeader;\n      }\n\n      // 设置定时器，以防onload事件不触发\n      const timer1 = setTimeout(hideHeader, 1000);\n      const timer2 = setTimeout(hideHeader, 3000); // 再次尝试，确保生效\n\n      // 清理函数\n      return () => {\n        clearTimeout(timer1);\n        clearTimeout(timer2);\n        if (iframe) {\n          iframe.onload = null;\n        }\n      };\n    }, [url]);\n\n    return (\n      <View style={styles.webview}>\n        <iframe \n          ref={iframeRef}\n          src={url} \n          style={{ width: '100%', height: '100%', border: 'none' }}\n          title=\"Web Content\"\n        />\n      </View>\n    );\n  }\n  \n  // 在原生平台上使用WebView\n  try {\n    const { WebView } = require('react-native-webview');\n    \n    // 注入的JavaScript代码来隐藏顶栏\n    const injectedJavaScript = `\n      (function() {\n        // 常见的顶栏元素选择器\n        const headerSelectors = [\n          'header', \n          '.header', \n          '#header',\n          '.navbar',\n          '#navbar',\n          '.top-bar',\n          '#top-bar',\n          '.site-header',\n          '#site-header',\n          '.site-nav',\n          '.header-top'\n        ];\n\n        // 尝试隐藏所有可能的顶栏元素\n        headerSelectors.forEach(selector => {\n          const elements = document.querySelectorAll(selector);\n          elements.forEach(element => {\n            element.style.display = 'none';\n            element.style.visibility = 'hidden';\n            element.style.height = '0';\n            element.style.margin = '0';\n            element.style.padding = '0';\n          });\n        });\n\n        // 调整内容区域的边距和样式\n        const mainContent = document.querySelector('main, .main, #main, .content, #content, .container');\n        if (mainContent) {\n          mainContent.style.marginTop = '0';\n          mainContent.style.paddingTop = '0';\n        }\n\n        // 也尝试调整body和html标签的样式\n        document.body.style.margin = '0';\n        document.body.style.padding = '0';\n        document.documentElement.style.margin = '0';\n        document.documentElement.style.padding = '0';\n\n        return true;\n      })();\n    `;\n    \n    return (\n      <WebView\n        source={{ uri: url }}\n        style={styles.webview}\n        javaScriptEnabled={true}\n        domStorageEnabled={true}\n        startInLoadingState={true}\n        scalesPageToFit={true}\n        injectedJavaScript={injectedJavaScript}\n        injectedJavaScriptBeforeContentLoaded={injectedJavaScript}\n      />\n    );\n  } catch (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>无法加载WebView组件</Text>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  webview: {\n    flex: 1,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#666',\n  },\n});\n\nexport default WebViewComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}