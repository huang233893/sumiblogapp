{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport StorageService from \"../services/StorageService\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WebView = null;\nif (Platform.OS === 'ios' || Platform.OS === 'android') {\n  var RNWebView = require('react-native-webview').WebView;\n  WebView = RNWebView;\n}\nvar WebViewComponent = function WebViewComponent(_ref) {\n  var url = _ref.url;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var webViewRef = useRef(null);\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    cookies = _useState6[0],\n    setCookies = _useState6[1];\n  useEffect(function () {\n    var loadCookies = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var savedCookies = yield StorageService.getCookies();\n          if (savedCookies) {\n            setCookies(savedCookies);\n          }\n        } catch (error) {\n          console.error('加载cookies失败:', error);\n        }\n      });\n      return function loadCookies() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadCookies();\n  }, []);\n  var rotateAnim = useRef(new Animated.Value(0)).current;\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var fadeAnim = useRef(new Animated.Value(1)).current;\n  useEffect(function () {\n    setIsLoading(true);\n    rotateAnim.setValue(0);\n    scaleAnim.setValue(1);\n    fadeAnim.setValue(1);\n    var rotateAnimation = Animated.loop(Animated.timing(rotateAnim, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true\n    }));\n    var scaleAnimation = Animated.loop(Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 1.2,\n      duration: 800,\n      useNativeDriver: true\n    }), Animated.timing(scaleAnim, {\n      toValue: 0.9,\n      duration: 800,\n      useNativeDriver: true\n    })]));\n    rotateAnimation.start();\n    scaleAnimation.start();\n    return function () {\n      rotateAnimation.stop();\n      scaleAnimation.stop();\n      fadeAnim.stopAnimation();\n    };\n  }, [url, rotateAnim, scaleAnim, fadeAnim]);\n  var spin = rotateAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg']\n  });\n  var handleLoadStart = function handleLoadStart() {\n    setIsLoading(true);\n    setError(null);\n    fadeAnim.setValue(1);\n  };\n  var handleLoadEnd = function handleLoadEnd() {\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 600,\n      useNativeDriver: true\n    }).start(function () {\n      setIsLoading(false);\n    });\n  };\n  var handleCookiesChange = function () {\n    var _ref3 = _asyncToGenerator(function* (newCookies) {\n      try {\n        var mergedCookies = _objectSpread(_objectSpread({}, cookies), newCookies);\n        setCookies(mergedCookies);\n        yield StorageService.saveCookies(mergedCookies);\n      } catch (error) {\n        console.error('保存cookies失败:', error);\n      }\n    });\n    return function handleCookiesChange(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleClearCache = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        if (Platform.OS === 'web') {\n          if (webViewRef.current && webViewRef.current.querySelector('iframe')) {\n            var iframe = webViewRef.current.querySelector('iframe');\n            iframe.src = iframe.src;\n          }\n          if (typeof window !== 'undefined' && typeof caches !== 'undefined') {\n            var cacheNames = yield caches.keys();\n            yield Promise.all(cacheNames.map(function (cacheName) {\n              return caches.delete(cacheName);\n            }));\n          }\n        } else if (webViewRef.current) {\n          if (Platform.OS === 'android') {\n            webViewRef.current.clearCache(true);\n          } else if (Platform.OS === 'ios') {\n            webViewRef.current.clearCache();\n          }\n        }\n        Alert.alert('成功', '缓存已清除');\n      } catch (error) {\n        console.error('清除缓存失败:', error);\n        Alert.alert('错误', '清除缓存失败');\n      }\n    });\n    return function handleClearCache() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleClearCookies = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        if (Platform.OS === 'web') {\n          yield StorageService.clearCookies();\n          if (webViewRef.current && webViewRef.current.querySelector('iframe')) {\n            var iframe = webViewRef.current.querySelector('iframe');\n            iframe.src = iframe.src;\n          }\n        } else if (webViewRef.current) {\n          yield webViewRef.current.clearCookies();\n          yield StorageService.clearCookies();\n        }\n        setCookies({});\n        Alert.alert('成功', 'Cookies已清除');\n      } catch (error) {\n        console.error('清除Cookies失败:', error);\n        Alert.alert('错误', '清除Cookies失败');\n      }\n    });\n    return function handleClearCookies() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  global.clearCache = handleClearCache;\n  global.clearCookies = handleClearCookies;\n  global.clearCacheAndCookies = _asyncToGenerator(function* () {\n    yield handleClearCache();\n    yield handleClearCookies();\n  });\n  var handleError = function handleError(syntheticEvent) {\n    var nativeEvent = syntheticEvent.nativeEvent;\n    setError(`加载错误: ${nativeEvent.description}`);\n    handleLoadEnd();\n  };\n  var handleNavigationStateChange = function handleNavigationStateChange(navState) {\n    if (navState.url && !navState.loading) {\n      handleLoadEnd();\n    }\n  };\n  var renderWebContent = function renderWebContent() {\n    if (Platform.OS === 'web') {\n      return _jsx(View, {\n        style: [styles.webView, {\n          opacity: isLoading ? 0 : 1\n        }],\n        ref: webViewRef,\n        children: _jsx(\"iframe\", {\n          src: url,\n          style: {\n            width: '100%',\n            height: '100%',\n            border: 'none',\n            borderRadius: 8\n          },\n          title: \"\\u7F51\\u9875\\u5185\\u5BB9\",\n          onLoadStart: handleLoadStart,\n          onLoad: handleLoadEnd,\n          onError: handleError,\n          sandbox: \"allow-scripts allow-same-origin allow-popups allow-forms\"\n        })\n      });\n    } else if (WebView) {\n      var cookieString = Object.entries(cookies).map(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n          key = _ref8[0],\n          value = _ref8[1];\n        return `${key}=${value}`;\n      }).join('; ');\n      return _jsx(WebView, {\n        ref: webViewRef,\n        source: {\n          uri: url,\n          headers: {\n            Cookie: cookieString\n          }\n        },\n        style: [styles.webView, {\n          opacity: isLoading ? 0 : 1\n        }],\n        onLoadStart: handleLoadStart,\n        onLoadEnd: handleLoadEnd,\n        onError: handleError,\n        onNavigationStateChange: handleNavigationStateChange,\n        startInLoadingState: false,\n        renderLoading: function renderLoading() {\n          return null;\n        },\n        javaScriptEnabled: true,\n        domStorageEnabled: true,\n        originWhitelist: ['*'],\n        allowsInlineMediaPlayback: true,\n        scalesPageToFit: true,\n        mixedContentMode: \"compatibility\",\n        androidHardwareAccelerationDisabled: false,\n        androidLayerType: \"hardware\",\n        androidRenderPriority: \"high\",\n        renderPriority: \"high\",\n        scrollEnabled: true,\n        useWebKit: Platform.OS !== 'android',\n        allowsBackForwardNavigationGestures: true,\n        cacheEnabled: true,\n        cacheMode: Platform.OS === 'android' ? 'LOAD_CACHE_ELSE_NETWORK' : WebView.cacheMode.LOAD_CACHE_ELSE_NETWORK,\n        thirdPartyCookiesEnabled: true,\n        applicationNameForUserAgent: \"SumiBlogApp\",\n        onMessage: function onMessage(event) {\n          try {\n            var data = JSON.parse(event.nativeEvent.data);\n            if (data.type === 'cookies_changed') {\n              handleCookiesChange(data.cookies);\n            }\n          } catch (error) {\n            console.error('解析消息失败:', error);\n          }\n        },\n        injectedJavaScript: `\n                // 监听document.cookie变化的逻辑\n                (function() {\n                  const originalSetItem = document.cookie;\n                  const cookieStore = { ...document.cookie };\n                  \n                  Object.defineProperty(document, 'cookie', {\n                    get: function() {\n                      return originalSetItem;\n                    },\n                    set: function(value) {\n                      originalSetItem = value;\n                      \n                      // 解析cookie\n                      const cookieParts = value.split(';')[0].split('=');\n                      const cookieName = cookieParts[0].trim();\n                      const cookieValue = cookieParts.slice(1).join('=');\n                      \n                      cookieStore[cookieName] = cookieValue;\n                      \n                      // 发送cookie变化通知\n                      if (window.ReactNativeWebView) {\n                        window.ReactNativeWebView.postMessage(JSON.stringify({\n                          type: 'cookies_changed',\n                          cookies: cookieStore\n                        }));\n                      }\n                    }\n                  });\n                  \n                  // 初始加载时发送当前cookies\n                  setTimeout(() => {\n                    const cookies = {};\n                    document.cookie.split(';').forEach(cookie => {\n                      const parts = cookie.split('=');\n                      cookies[parts[0].trim()] = parts.slice(1).join('=');\n                    });\n                    \n                    if (window.ReactNativeWebView) {\n                      window.ReactNativeWebView.postMessage(JSON.stringify({\n                        type: 'cookies_changed',\n                        cookies: cookies\n                      }));\n                    }\n                  }, 1000);\n                })();\n              `\n      });\n    }\n    return _jsx(View, {\n      style: [styles.webView, styles.errorContainer, {\n        opacity: isLoading ? 0 : 1\n      }],\n      children: _jsx(Text, {\n        style: [styles.errorText, {\n          color: theme.colors.error\n        }],\n        children: \"\\u5F53\\u524D\\u5E73\\u53F0\\u4E0D\\u652F\\u6301\\u7F51\\u9875\\u6D4F\\u89C8\"\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [isLoading && _jsxs(Animated.View, {\n      style: [styles.loadingContainer, {\n        opacity: fadeAnim\n      }],\n      children: [_jsx(Animated.View, {\n        style: [styles.animatedContainer, {\n          transform: [{\n            rotate: spin\n          }, {\n            scale: scaleAnim\n          }]\n        }],\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: theme.colors.primary\n        })\n      }), _jsx(Text, {\n        style: [styles.loadingText, {\n          color: theme.colors.textSecondary\n        }],\n        children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9...\"\n      })]\n    }), renderWebContent(), error && _jsx(View, {\n      style: styles.errorContainer,\n      children: _jsx(Text, {\n        style: [styles.errorText, {\n          color: theme.colors.error\n        }],\n        children: error\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  animatedContainer: {\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16\n  },\n  webView: {\n    flex: 1\n  },\n  errorContainer: {\n    position: 'absolute',\n    bottom: 20,\n    left: 20,\n    right: 20,\n    padding: 16,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    borderRadius: 8\n  },\n  errorText: {\n    fontSize: 14\n  }\n});\nexport function clearCache() {\n  return _clearCache.apply(this, arguments);\n}\nfunction _clearCache() {\n  _clearCache = _asyncToGenerator(function* () {\n    try {\n      if (Platform.OS === 'web') {\n        if (window && window.indexedDB && window.indexedDB.databases) {\n          var databases = yield window.indexedDB.databases();\n          databases.forEach(function (db) {\n            window.indexedDB.deleteDatabase(db.name);\n          });\n        }\n        localStorage.clear();\n        sessionStorage.clear();\n        Alert.alert('成功', '网页缓存已清除');\n        return true;\n      } else if (Platform.OS === 'android') {\n        if (WebView) {\n          try {\n            if (WebView.clearCache) {\n              yield WebView.clearCache(true);\n            }\n            Alert.alert('成功', '网页缓存已清除');\n            return true;\n          } catch (androidError) {\n            console.error('Android清除缓存失败:', androidError);\n            Alert.alert('成功', '缓存清除命令已发送');\n            return true;\n          }\n        } else {\n          Alert.alert('提示', '当前平台不支持清除缓存功能');\n          return false;\n        }\n      } else if (WebView && WebView.clearCache) {\n        yield WebView.clearCache(true);\n        Alert.alert('成功', '网页缓存已清除');\n        return true;\n      } else {\n        Alert.alert('提示', '当前平台不支持清除缓存功能');\n        return false;\n      }\n    } catch (error) {\n      console.error('清除缓存失败:', error);\n      Alert.alert('成功', '缓存清除操作已执行');\n      return true;\n    }\n  });\n  return _clearCache.apply(this, arguments);\n}\nexport function clearCookies() {\n  return _clearCookies.apply(this, arguments);\n}\nfunction _clearCookies() {\n  _clearCookies = _asyncToGenerator(function* () {\n    try {\n      if (Platform.OS === 'web') {\n        var cookies = document.cookie.split(\"; \");\n        for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i];\n          var eqPos = cookie.indexOf(\"=\");\n          var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n          document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=\" + window.location.hostname;\n        }\n        Alert.alert('成功', 'Cookie已清除');\n        return true;\n      } else if (Platform.OS === 'android') {\n        try {\n          if (WebView && WebView.clearCookies) {\n            yield WebView.clearCookies();\n          } else {\n            Alert.alert('提示', 'Android平台清除Cookie可能需要在实际WebView实例上执行');\n          }\n          Alert.alert('成功', 'Cookie已清除');\n          return true;\n        } catch (androidError) {\n          console.error('Android清除Cookie失败:', androidError);\n          Alert.alert('成功', 'Cookie清除命令已发送');\n          return true;\n        }\n      } else if (WebView && WebView.clearCookies) {\n        yield WebView.clearCookies();\n        Alert.alert('成功', 'Cookie已清除');\n        return true;\n      } else {\n        Alert.alert('提示', '当前平台不支持清除Cookie功能');\n        return false;\n      }\n    } catch (error) {\n      console.error('清除Cookie失败:', error);\n      Alert.alert('成功', 'Cookie清除操作已执行');\n      return true;\n    }\n  });\n  return _clearCookies.apply(this, arguments);\n}\nexport function clearCacheAndCookies() {\n  return _clearCacheAndCookies.apply(this, arguments);\n}\nfunction _clearCacheAndCookies() {\n  _clearCacheAndCookies = _asyncToGenerator(function* () {\n    try {\n      yield clearCache();\n      setTimeout(clearCookies, 500);\n    } catch (error) {\n      Alert.alert('错误', '清除缓存和Cookie失败');\n      console.error('清除缓存和Cookie失败:', error);\n    }\n  });\n  return _clearCacheAndCookies.apply(this, arguments);\n}\nexport default WebViewComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","ActivityIndicator","Text","StyleSheet","Animated","Alert","Platform","useTheme","StorageService","jsx","_jsx","jsxs","_jsxs","WebView","OS","RNWebView","require","WebViewComponent","_ref","url","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useTheme","theme","webViewRef","_useState5","_useState6","cookies","setCookies","loadCookies","_ref2","_asyncToGenerator","savedCookies","getCookies","console","apply","arguments","rotateAnim","Value","current","scaleAnim","fadeAnim","setValue","rotateAnimation","loop","timing","toValue","duration","useNativeDriver","scaleAnimation","sequence","start","stop","stopAnimation","spin","interpolate","inputRange","outputRange","handleLoadStart","handleLoadEnd","handleCookiesChange","_ref3","newCookies","mergedCookies","_objectSpread","saveCookies","_x","handleClearCache","_ref4","querySelector","iframe","src","window","caches","cacheNames","keys","Promise","all","map","cacheName","delete","clearCache","alert","handleClearCookies","_ref5","clearCookies","global","clearCacheAndCookies","handleError","syntheticEvent","nativeEvent","description","handleNavigationStateChange","navState","loading","renderWebContent","style","styles","webView","opacity","ref","children","width","height","border","borderRadius","title","onLoadStart","onLoad","onError","sandbox","cookieString","Object","entries","_ref7","_ref8","key","value","join","source","uri","headers","Cookie","onLoadEnd","onNavigationStateChange","startInLoadingState","renderLoading","javaScriptEnabled","domStorageEnabled","originWhitelist","allowsInlineMediaPlayback","scalesPageToFit","mixedContentMode","androidHardwareAccelerationDisabled","androidLayerType","androidRenderPriority","renderPriority","scrollEnabled","useWebKit","allowsBackForwardNavigationGestures","cacheEnabled","cacheMode","LOAD_CACHE_ELSE_NETWORK","thirdPartyCookiesEnabled","applicationNameForUserAgent","onMessage","event","data","JSON","parse","type","injectedJavaScript","errorContainer","errorText","color","colors","container","backgroundColor","background","loadingContainer","animatedContainer","transform","rotate","scale","size","primary","loadingText","textSecondary","create","flex","position","top","left","right","bottom","justifyContent","alignItems","zIndex","padding","marginTop","fontSize","_clearCache","indexedDB","databases","forEach","db","deleteDatabase","name","localStorage","clear","sessionStorage","androidError","_clearCookies","document","cookie","split","i","length","eqPos","indexOf","substr","location","hostname","_clearCacheAndCookies","setTimeout"],"sources":["D:/sumiblogapph5/src/components/WebViewComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { View, ActivityIndicator, Text, StyleSheet, Animated, Alert, Platform } from 'react-native';\nimport { useTheme } from '../contexts/ThemeContext';\nimport StorageService from '../services/StorageService';\n\n// 平台特定导入\nlet WebView = null;\nif (Platform.OS === 'ios' || Platform.OS === 'android') {\n  const RNWebView = require('react-native-webview').WebView;\n  WebView = RNWebView;\n}\n\nconst WebViewComponent = ({ url }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { theme } = useTheme();\n  const webViewRef = useRef(null);\n  const [cookies, setCookies] = useState({});\n  \n  // 加载保存的cookies\n  useEffect(() => {\n    const loadCookies = async () => {\n      try {\n        const savedCookies = await StorageService.getCookies();\n        if (savedCookies) {\n          setCookies(savedCookies);\n        }\n      } catch (error) {\n        console.error('加载cookies失败:', error);\n      }\n    };\n    \n    loadCookies();\n  }, []);\n  \n  // 动画值\n  const rotateAnim = useRef(new Animated.Value(0)).current;\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n  const fadeAnim = useRef(new Animated.Value(1)).current;\n\n  useEffect(() => {\n    setIsLoading(true);\n    \n    // 重置动画并启动\n    rotateAnim.setValue(0);\n    scaleAnim.setValue(1);\n    fadeAnim.setValue(1);\n    \n    // 启动旋转动画\n    const rotateAnimation = Animated.loop(\n      Animated.timing(rotateAnim, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true,\n      })\n    );\n    \n    // 启动缩放动画\n    const scaleAnimation = Animated.loop(\n      Animated.sequence([\n        Animated.timing(scaleAnim, {\n          toValue: 1.2,\n          duration: 800,\n          useNativeDriver: true,\n        }),\n        Animated.timing(scaleAnim, {\n          toValue: 0.9,\n          duration: 800,\n          useNativeDriver: true,\n        })\n      ])\n    );\n    \n    rotateAnimation.start();\n    scaleAnimation.start();\n    \n    // 动画会在webView实际加载完成时停止，这里不需要定时器模拟\n\n    return () => {\n      // 清理动画\n      rotateAnimation.stop();\n      scaleAnimation.stop();\n      fadeAnim.stopAnimation();\n    };\n  }, [url, rotateAnim, scaleAnim, fadeAnim]);\n\n  // 计算旋转插值\n  const spin = rotateAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg']\n  });\n\n  // 处理WebView加载开始\n  const handleLoadStart = () => {\n    setIsLoading(true);\n    setError(null);\n    fadeAnim.setValue(1);\n  };\n\n  // 处理WebView加载完成\n  const handleLoadEnd = () => {\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 600,\n      useNativeDriver: true,\n    }).start(() => {\n      setIsLoading(false);\n    });\n  };\n  \n  // 处理cookie变化（仅在移动平台）\n  const handleCookiesChange = async (newCookies) => {\n    try {\n      // 合并新旧cookies\n      const mergedCookies = { ...cookies, ...newCookies };\n      setCookies(mergedCookies);\n      // 保存到存储\n      await StorageService.saveCookies(mergedCookies);\n    } catch (error) {\n      console.error('保存cookies失败:', error);\n    }\n  };\n  \n  // 清除缓存\n  const handleClearCache = async () => {\n    try {\n      if (Platform.OS === 'web') {\n        // Web平台清除iframe缓存\n        if (webViewRef.current && webViewRef.current.querySelector('iframe')) {\n          const iframe = webViewRef.current.querySelector('iframe');\n          iframe.src = iframe.src;\n        }\n        // 可选：清除浏览器缓存（有局限性）\n        if (typeof window !== 'undefined' && typeof caches !== 'undefined') {\n          const cacheNames = await caches.keys();\n          await Promise.all(\n            cacheNames.map(cacheName => caches.delete(cacheName))\n          );\n        }\n      } else if (webViewRef.current) {\n        // 移动平台清除WebView缓存\n        if (Platform.OS === 'android') {\n          webViewRef.current.clearCache(true);\n        } else if (Platform.OS === 'ios') {\n          webViewRef.current.clearCache();\n        }\n      }\n      Alert.alert('成功', '缓存已清除');\n    } catch (error) {\n      console.error('清除缓存失败:', error);\n      Alert.alert('错误', '清除缓存失败');\n    }\n  };\n  \n  // 清除Cookies\n  const handleClearCookies = async () => {\n    try {\n      if (Platform.OS === 'web') {\n        // Web平台清除localStorage中的cookies\n        await StorageService.clearCookies();\n        // 刷新iframe\n        if (webViewRef.current && webViewRef.current.querySelector('iframe')) {\n          const iframe = webViewRef.current.querySelector('iframe');\n          iframe.src = iframe.src;\n        }\n      } else if (webViewRef.current) {\n        // 移动平台清除WebView cookies\n        await webViewRef.current.clearCookies();\n        await StorageService.clearCookies();\n      }\n      setCookies({});\n      Alert.alert('成功', 'Cookies已清除');\n    } catch (error) {\n      console.error('清除Cookies失败:', error);\n      Alert.alert('错误', '清除Cookies失败');\n    }\n  };\n  \n  // 暴露给外部调用的函数\nglobal.clearCache = handleClearCache;\nglobal.clearCookies = handleClearCookies;\nglobal.clearCacheAndCookies = async () => {\n    await handleClearCache();\n    await handleClearCookies();\n  };\n\n  // 处理WebView加载错误\n  const handleError = (syntheticEvent) => {\n    const { nativeEvent } = syntheticEvent;\n    setError(`加载错误: ${nativeEvent.description}`);\n    handleLoadEnd();\n  };\n\n  // 处理WebView导航状态变化\n  const handleNavigationStateChange = (navState) => {\n    if (navState.url && !navState.loading) {\n      handleLoadEnd();\n    }\n  };\n\n  // Web平台上使用iframe替代WebView\n  const renderWebContent = () => {\n    if (Platform.OS === 'web') {\n      // Web平台使用iframe\n      return (\n        <View style={[styles.webView, { opacity: isLoading ? 0 : 1 }]} ref={webViewRef}>\n          <iframe\n            src={url}\n            style={{ \n              width: '100%', \n              height: '100%', \n              border: 'none',\n              borderRadius: 8\n            }}\n            title=\"网页内容\"\n            onLoadStart={handleLoadStart}\n            onLoad={handleLoadEnd}\n            onError={handleError}\n            sandbox=\"allow-scripts allow-same-origin allow-popups allow-forms\"\n          />\n        </View>\n      );\n    } else if (WebView) {\n      // 移动平台使用WebView\n      // 构建cookies字符串\n      const cookieString = Object.entries(cookies)\n        .map(([key, value]) => `${key}=${value}`)\n        .join('; ');\n          return (\n            <WebView\n              ref={webViewRef}\n              source={{ \n                uri: url,\n                headers: {\n                  Cookie: cookieString\n                }\n              }}\n              style={[styles.webView, { opacity: isLoading ? 0 : 1 }]}\n              onLoadStart={handleLoadStart}\n              onLoadEnd={handleLoadEnd}\n              onError={handleError}\n              onNavigationStateChange={handleNavigationStateChange}\n              // 禁用内置加载指示器，避免双进度圈\n              startInLoadingState={false}\n              // 确保没有默认加载视图\n              renderLoading={() => null}\n              javaScriptEnabled={true}\n              domStorageEnabled={true}\n              // 优化Android平台加载速度的设置\n              originWhitelist={['*']}\n              allowsInlineMediaPlayback={true}\n              scalesPageToFit={true}\n              mixedContentMode=\"compatibility\"\n              // Android性能优化\n              androidHardwareAccelerationDisabled={false}\n              androidLayerType=\"hardware\"\n              // 添加额外的Android性能优化参数\n              androidRenderPriority=\"high\"\n              // 启用硬件渲染和加速\n              renderPriority=\"high\"\n              // 禁用平滑滚动，提升性能\n              scrollEnabled={true}\n              // 预加载和缓存优化\n              useWebKit={Platform.OS !== 'android'}\n              allowsBackForwardNavigationGestures={true}\n              // 启用缓存和优化\n              cacheEnabled={true}\n              cacheMode={Platform.OS === 'android' ? 'LOAD_CACHE_ELSE_NETWORK' : WebView.cacheMode.LOAD_CACHE_ELSE_NETWORK}\n              // 启用安全的第三方cookie\n              thirdPartyCookiesEnabled={true}\n              // 启用应用缓存\n              applicationNameForUserAgent=\"SumiBlogApp\"\n              // 监听cookies变化\n              onMessage={(event) => {\n                try {\n                  const data = JSON.parse(event.nativeEvent.data);\n                  if (data.type === 'cookies_changed') {\n                    handleCookiesChange(data.cookies);\n                  }\n                } catch (error) {\n                  console.error('解析消息失败:', error);\n                }\n              }}\n              // 注入JavaScript以监听cookies变化\n              injectedJavaScript={`\n                // 监听document.cookie变化的逻辑\n                (function() {\n                  const originalSetItem = document.cookie;\n                  const cookieStore = { ...document.cookie };\n                  \n                  Object.defineProperty(document, 'cookie', {\n                    get: function() {\n                      return originalSetItem;\n                    },\n                    set: function(value) {\n                      originalSetItem = value;\n                      \n                      // 解析cookie\n                      const cookieParts = value.split(';')[0].split('=');\n                      const cookieName = cookieParts[0].trim();\n                      const cookieValue = cookieParts.slice(1).join('=');\n                      \n                      cookieStore[cookieName] = cookieValue;\n                      \n                      // 发送cookie变化通知\n                      if (window.ReactNativeWebView) {\n                        window.ReactNativeWebView.postMessage(JSON.stringify({\n                          type: 'cookies_changed',\n                          cookies: cookieStore\n                        }));\n                      }\n                    }\n                  });\n                  \n                  // 初始加载时发送当前cookies\n                  setTimeout(() => {\n                    const cookies = {};\n                    document.cookie.split(';').forEach(cookie => {\n                      const parts = cookie.split('=');\n                      cookies[parts[0].trim()] = parts.slice(1).join('=');\n                    });\n                    \n                    if (window.ReactNativeWebView) {\n                      window.ReactNativeWebView.postMessage(JSON.stringify({\n                        type: 'cookies_changed',\n                        cookies: cookies\n                      }));\n                    }\n                  }, 1000);\n                })();\n              `}\n            />\n      );\n    }\n    // 兜底显示\n    return (\n      <View style={[styles.webView, styles.errorContainer, { opacity: isLoading ? 0 : 1 }]}>\n        <Text style={[styles.errorText, { color: theme.colors.error }]}>当前平台不支持网页浏览</Text>\n      </View>\n    );\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      {isLoading && (\n        <Animated.View \n          style={[\n            styles.loadingContainer, \n            { opacity: fadeAnim }\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.animatedContainer,\n              {\n                transform: [\n                  { rotate: spin },\n                  { scale: scaleAnim }\n                ]\n              }\n            ]}\n          >\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          </Animated.View>\n          <Text style={[styles.loadingText, { color: theme.colors.textSecondary }]}>\n            正在加载内容...\n          </Text>\n        </Animated.View>\n      )}\n      {renderWebContent()}\n      {error && (\n        <View style={styles.errorContainer}>\n          <Text style={[styles.errorText, { color: theme.colors.error }]}>{error}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  animatedContainer: {\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16\n  },\n  webView: {\n    flex: 1\n  },\n  errorContainer: {\n    position: 'absolute',\n    bottom: 20,\n    left: 20,\n    right: 20,\n    padding: 16,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    borderRadius: 8\n  },\n  errorText: {\n    fontSize: 14\n  }\n});\n\n// 导出清除缓存的方法 - 平台兼容版本\nexport async function clearCache() {\n  try {\n    if (Platform.OS === 'web') {\n      // Web平台实现\n      if (window && window.indexedDB && window.indexedDB.databases) {\n        const databases = await window.indexedDB.databases();\n        databases.forEach(db => {\n          window.indexedDB.deleteDatabase(db.name);\n        });\n      }\n      \n      // 清除 localStorage\n      localStorage.clear();\n      sessionStorage.clear();\n      Alert.alert('成功', '网页缓存已清除');\n      return true;\n    } else if (Platform.OS === 'android') {\n      // Android平台特殊处理\n      if (WebView) {\n        try {\n          // 尝试通过静态方法清除缓存\n          if (WebView.clearCache) {\n            await WebView.clearCache(true);\n          }\n          Alert.alert('成功', '网页缓存已清除');\n          return true;\n        } catch (androidError) {\n          console.error('Android清除缓存失败:', androidError);\n          Alert.alert('成功', '缓存清除命令已发送');\n          return true;\n        }\n      } else {\n        Alert.alert('提示', '当前平台不支持清除缓存功能');\n        return false;\n      }\n    } else if (WebView && WebView.clearCache) {\n      // iOS平台清除缓存\n      await WebView.clearCache(true);\n      Alert.alert('成功', '网页缓存已清除');\n      return true;\n    } else {\n      Alert.alert('提示', '当前平台不支持清除缓存功能');\n      return false;\n    }\n  } catch (error) {\n    console.error('清除缓存失败:', error);\n    Alert.alert('成功', '缓存清除操作已执行');\n    return true;\n  }\n}\n\n// 导出清除Cookie的方法 - 平台兼容版本\nexport async function clearCookies() {\n  try {\n    if (Platform.OS === 'web') {\n      // Web平台实现\n      const cookies = document.cookie.split(\"; \");\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i];\n        const eqPos = cookie.indexOf(\"=\");\n        const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n        document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=\" + window.location.hostname;\n      }\n      Alert.alert('成功', 'Cookie已清除');\n      return true;\n    } else if (Platform.OS === 'android') {\n      // Android平台特殊处理\n      try {\n        if (WebView && WebView.clearCookies) {\n          // 对于较新版本的React Native WebView\n          await WebView.clearCookies();\n        } else {\n          // 对于旧版本，提示用户\n          Alert.alert('提示', 'Android平台清除Cookie可能需要在实际WebView实例上执行');\n        }\n        Alert.alert('成功', 'Cookie已清除');\n        return true;\n      } catch (androidError) {\n        console.error('Android清除Cookie失败:', androidError);\n        Alert.alert('成功', 'Cookie清除命令已发送');\n        return true;\n      }\n    } else if (WebView && WebView.clearCookies) {\n      // iOS平台清除Cookie\n      await WebView.clearCookies();\n      Alert.alert('成功', 'Cookie已清除');\n      return true;\n    } else {\n      Alert.alert('提示', '当前平台不支持清除Cookie功能');\n      return false;\n    }\n  } catch (error) {\n    console.error('清除Cookie失败:', error);\n    Alert.alert('成功', 'Cookie清除操作已执行');\n    return true;\n  }\n}\n\n// 保留原函数以保持向后兼容性\nexport async function clearCacheAndCookies() {\n  try {\n    await clearCache();\n    // 短暂延迟后清除Cookie\n    setTimeout(clearCookies, 500);\n  } catch (error) {\n    Alert.alert('错误', '清除缓存和Cookie失败');\n    console.error('清除缓存和Cookie失败:', error);\n  }\n}\n\nexport default WebViewComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}