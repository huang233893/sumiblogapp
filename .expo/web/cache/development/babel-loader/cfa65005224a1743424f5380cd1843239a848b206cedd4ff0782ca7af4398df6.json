{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport WebViewComponent from \"./src/components/WebViewComponent\";\nimport AboutScreen from \"./src/screens/AboutScreen\";\nimport UpdateScreen from \"./src/screens/UpdateScreen\";\nimport { ThemeProvider, useTheme } from \"./src/contexts/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction MainNavigator() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var _useState = useState('Home'),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshCount = _useState4[0],\n    setRefreshCount = _useState4[1];\n  var handleRefresh = function handleRefresh() {\n    setRefreshCount(function (prev) {\n      return prev + 1;\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        screenOptions: {\n          tabBarActiveTintColor: theme.colors.tabBarActive,\n          tabBarInactiveTintColor: theme.colors.tabBarInactive,\n          tabBarStyle: [styles.tabBar, {\n            backgroundColor: theme.colors.surface\n          }],\n          headerShown: false\n        },\n        onStateChange: function onStateChange(state) {\n          if (state.routes[state.index]) {\n            setActiveTab(state.routes[state.index].name);\n          }\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          options: {\n            tabBarLabel: '主页',\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color,\n                size = _ref.size;\n              return _jsx(View, {\n                style: [styles.icon, {\n                  backgroundColor: color\n                }]\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(WebViewComponent, {\n              url: \"https://www.sumi233.top\"\n            }, `home-${refreshCount}`);\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Archive\",\n          options: {\n            tabBarLabel: '归档',\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color,\n                size = _ref2.size;\n              return _jsx(View, {\n                style: [styles.icon, {\n                  backgroundColor: color\n                }]\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(WebViewComponent, {\n              url: \"https://www.sumi233.top/archives\"\n            }, `archive-${refreshCount}`);\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Message\",\n          options: {\n            tabBarLabel: '留言板',\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var color = _ref3.color,\n                size = _ref3.size;\n              return _jsx(View, {\n                style: [styles.icon, {\n                  backgroundColor: color\n                }]\n              });\n            }\n          },\n          children: function children() {\n            return _jsx(WebViewComponent, {\n              url: \"https://www.sumi233.top/comments\"\n            }, `message-${refreshCount}`);\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"About\",\n          component: AboutScreen,\n          options: {\n            tabBarLabel: '关于',\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var color = _ref4.color,\n                size = _ref4.size;\n              return _jsx(View, {\n                style: [styles.icon, {\n                  backgroundColor: color\n                }]\n              });\n            }\n          }\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.refreshButton, {\n        backgroundColor: theme.colors.primary\n      }, Platform.OS === 'web' && styles.webRefreshButton],\n      onPress: handleRefresh,\n      activeOpacity: 0.7,\n      children: _jsx(View, {\n        style: styles.refreshIcon\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  tabBar: {\n    height: 60,\n    paddingBottom: 8,\n    paddingTop: 8\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    borderRadius: 12\n  },\n  refreshButton: {\n    position: 'absolute',\n    right: 20,\n    bottom: 80,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    backgroundColor: '#007AFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 6,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3\n  },\n  webRefreshButton: {\n    cursor: 'pointer',\n    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n  },\n  refreshIcon: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: '#FFFFFF'\n  }\n});\nfunction App() {\n  return _jsx(ThemeProvider, {\n    children: _jsx(MainNavigator, {})\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","NavigationContainer","createBottomTabNavigator","View","Text","StyleSheet","TouchableOpacity","Platform","WebViewComponent","AboutScreen","UpdateScreen","ThemeProvider","useTheme","jsx","_jsx","jsxs","_jsxs","Tab","MainNavigator","_useTheme","theme","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","refreshCount","setRefreshCount","handleRefresh","prev","style","styles","container","children","Navigator","screenOptions","tabBarActiveTintColor","colors","tabBarActive","tabBarInactiveTintColor","tabBarInactive","tabBarStyle","tabBar","backgroundColor","surface","headerShown","onStateChange","state","routes","index","name","Screen","options","tabBarLabel","tabBarIcon","_ref","color","size","icon","url","_ref2","_ref3","component","_ref4","refreshButton","primary","OS","webRefreshButton","onPress","activeOpacity","refreshIcon","create","flex","position","height","paddingBottom","paddingTop","width","borderRadius","right","bottom","justifyContent","alignItems","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","cursor","boxShadow","App"],"sources":["D:/sumiblogapph5/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\r\nimport WebViewComponent from './src/components/WebViewComponent';\r\nimport AboutScreen from './src/screens/AboutScreen';\r\nimport UpdateScreen from './src/screens/UpdateScreen';\r\nimport { ThemeProvider, useTheme } from './src/contexts/ThemeContext';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// WebView组件已恢复\r\n\r\n// 使用主题的主导航组件\r\nfunction MainNavigator() {\r\n  const { theme } = useTheme();\r\n  const [activeTab, setActiveTab] = useState('Home');\r\n  const [refreshCount, setRefreshCount] = useState(0);\r\n\r\n  // 处理刷新操作\r\n  const handleRefresh = () => {\r\n    // 通过改变状态来触发WebViewComponent的重新加载\r\n    setRefreshCount(prev => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <NavigationContainer>\r\n        <Tab.Navigator\r\n          screenOptions={{\r\n            tabBarActiveTintColor: theme.colors.tabBarActive, // 使用主题颜色\r\n            tabBarInactiveTintColor: theme.colors.tabBarInactive,\r\n            tabBarStyle: [styles.tabBar, { backgroundColor: theme.colors.surface }],\r\n            headerShown: false,\r\n          }}\r\n          onStateChange={(state) => {\r\n            // 监听当前激活的标签页\r\n            if (state.routes[state.index]) {\r\n              setActiveTab(state.routes[state.index].name);\r\n            }\r\n          }}\r\n        >\r\n        <Tab.Screen \r\n          name=\"Home\" \r\n          options={{ \r\n            tabBarLabel: '主页',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <View style={[styles.icon, { backgroundColor: color }]} />\r\n            )\r\n          }} \r\n        >\r\n          {() => <WebViewComponent key={`home-${refreshCount}`} url=\"https://www.sumi233.top\" />}\r\n        </Tab.Screen>\r\n        <Tab.Screen \r\n          name=\"Archive\" \r\n          options={{ \r\n            tabBarLabel: '归档',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <View style={[styles.icon, { backgroundColor: color }]} />\r\n            )\r\n          }} \r\n        >\r\n          {() => <WebViewComponent key={`archive-${refreshCount}`} url=\"https://www.sumi233.top/archives\" />}\r\n        </Tab.Screen>\r\n        <Tab.Screen \r\n          name=\"Message\" \r\n          options={{ \r\n            tabBarLabel: '留言板',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <View style={[styles.icon, { backgroundColor: color }]} />\r\n            )\r\n          }} \r\n        >\r\n          {() => <WebViewComponent key={`message-${refreshCount}`} url=\"https://www.sumi233.top/comments\" />}\r\n        </Tab.Screen>\r\n        <Tab.Screen \r\n          name=\"About\" \r\n          component={AboutScreen}\r\n          options={{ \r\n            tabBarLabel: '关于',\r\n            tabBarIcon: ({ color, size }) => (\r\n              <View style={[styles.icon, { backgroundColor: color }]} />\r\n            )\r\n          }} \r\n        />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n    \r\n    {/* 悬浮刷新按钮 */}\r\n    <TouchableOpacity \r\n      style={[\r\n        styles.refreshButton, \r\n        { backgroundColor: theme.colors.primary }, // 使用主题颜色\r\n        Platform.OS === 'web' && styles.webRefreshButton\r\n      ]}\r\n      onPress={handleRefresh}\r\n      activeOpacity={0.7}\r\n    >\r\n      <View style={styles.refreshIcon} />\r\n    </TouchableOpacity>\r\n  </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    position: 'relative',\r\n  },\r\n  tabBar: {\r\n    height: 60,\r\n    paddingBottom: 8,\r\n    paddingTop: 8,\r\n  },\r\n  icon: {\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n  },\r\n  refreshButton: {\r\n    position: 'absolute',\r\n    right: 20,\r\n    bottom: 80, // 位于底部导航栏上方\r\n    width: 56,\r\n    height: 56,\r\n    borderRadius: 28,\r\n    backgroundColor: '#007AFF',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    elevation: 6,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n  },\r\n  webRefreshButton: {\r\n    cursor: 'pointer',\r\n    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)',\r\n  },\r\n  refreshIcon: {\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n    backgroundColor: '#FFFFFF',\r\n    // 模拟刷新图标的简单设计，与现有图标风格保持一致\r\n  },\r\n});\r\n\r\n// 主应用组件，包装ThemeProvider\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <MainNavigator />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAEzE,OAAOC,gBAAgB;AACvB,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,SAASC,aAAa,EAAEC,QAAQ;AAAsC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEtE,IAAMC,GAAG,GAAGf,wBAAwB,CAAC,CAAC;AAKtC,SAASgB,aAAaA,CAAA,EAAG;EACvB,IAAAC,SAAA,GAAkBP,QAAQ,CAAC,CAAC;IAApBQ,KAAK,GAAAD,SAAA,CAALC,KAAK;EACb,IAAAC,SAAA,GAAkCrB,QAAQ,CAAC,MAAM,CAAC;IAAAsB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAwC1B,QAAQ,CAAC,CAAC,CAAC;IAAA2B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAGpC,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAE1BD,eAAe,CAAC,UAAAE,IAAI;MAAA,OAAIA,IAAI,GAAG,CAAC;IAAA,EAAC;EACnC,CAAC;EAED,OACEf,KAAA,CAACb,IAAI;IAAC6B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrB,IAAA,CAACb,mBAAmB;MAAAkC,QAAA,EAClBnB,KAAA,CAACC,GAAG,CAACmB,SAAS;QACZC,aAAa,EAAE;UACbC,qBAAqB,EAAElB,KAAK,CAACmB,MAAM,CAACC,YAAY;UAChDC,uBAAuB,EAAErB,KAAK,CAACmB,MAAM,CAACG,cAAc;UACpDC,WAAW,EAAE,CAACV,MAAM,CAACW,MAAM,EAAE;YAAEC,eAAe,EAAEzB,KAAK,CAACmB,MAAM,CAACO;UAAQ,CAAC,CAAC;UACvEC,WAAW,EAAE;QACf,CAAE;QACFC,aAAa,EAAE,SAAfA,aAAaA,CAAGC,KAAK,EAAK;UAExB,IAAIA,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,EAAE;YAC7B1B,YAAY,CAACwB,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,CAACC,IAAI,CAAC;UAC9C;QACF,CAAE;QAAAjB,QAAA,GAEJrB,IAAA,CAACG,GAAG,CAACoC,MAAM;UACTD,IAAI,EAAC,MAAM;UACXE,OAAO,EAAE;YACPC,WAAW,EAAE,IAAI;YACjBC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,IAAA;cAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;gBAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;cAAA,OACxB7C,IAAA,CAACX,IAAI;gBAAC6B,KAAK,EAAE,CAACC,MAAM,CAAC2B,IAAI,EAAE;kBAAEf,eAAe,EAAEa;gBAAM,CAAC;cAAE,CAAE,CAAC;YAAA;UAE9D,CAAE;UAAAvB,QAAA,EAED,SAAAA,SAAA;YAAA,OAAMrB,IAAA,CAACN,gBAAgB;cAA8BqD,GAAG,EAAC;YAAyB,GAArD,QAAQjC,YAAY,EAAmC,CAAC;UAAA;QAAA,CAC5E,CAAC,EACbd,IAAA,CAACG,GAAG,CAACoC,MAAM;UACTD,IAAI,EAAC,SAAS;UACdE,OAAO,EAAE;YACPC,WAAW,EAAE,IAAI;YACjBC,UAAU,EAAE,SAAZA,UAAUA,CAAAM,KAAA;cAAA,IAAKJ,KAAK,GAAAI,KAAA,CAALJ,KAAK;gBAAEC,IAAI,GAAAG,KAAA,CAAJH,IAAI;cAAA,OACxB7C,IAAA,CAACX,IAAI;gBAAC6B,KAAK,EAAE,CAACC,MAAM,CAAC2B,IAAI,EAAE;kBAAEf,eAAe,EAAEa;gBAAM,CAAC;cAAE,CAAE,CAAC;YAAA;UAE9D,CAAE;UAAAvB,QAAA,EAED,SAAAA,SAAA;YAAA,OAAMrB,IAAA,CAACN,gBAAgB;cAAiCqD,GAAG,EAAC;YAAkC,GAAjE,WAAWjC,YAAY,EAA4C,CAAC;UAAA;QAAA,CACxF,CAAC,EACbd,IAAA,CAACG,GAAG,CAACoC,MAAM;UACTD,IAAI,EAAC,SAAS;UACdE,OAAO,EAAE;YACPC,WAAW,EAAE,KAAK;YAClBC,UAAU,EAAE,SAAZA,UAAUA,CAAAO,KAAA;cAAA,IAAKL,KAAK,GAAAK,KAAA,CAALL,KAAK;gBAAEC,IAAI,GAAAI,KAAA,CAAJJ,IAAI;cAAA,OACxB7C,IAAA,CAACX,IAAI;gBAAC6B,KAAK,EAAE,CAACC,MAAM,CAAC2B,IAAI,EAAE;kBAAEf,eAAe,EAAEa;gBAAM,CAAC;cAAE,CAAE,CAAC;YAAA;UAE9D,CAAE;UAAAvB,QAAA,EAED,SAAAA,SAAA;YAAA,OAAMrB,IAAA,CAACN,gBAAgB;cAAiCqD,GAAG,EAAC;YAAkC,GAAjE,WAAWjC,YAAY,EAA4C,CAAC;UAAA;QAAA,CACxF,CAAC,EACbd,IAAA,CAACG,GAAG,CAACoC,MAAM;UACTD,IAAI,EAAC,OAAO;UACZY,SAAS,EAAEvD,WAAY;UACvB6C,OAAO,EAAE;YACPC,WAAW,EAAE,IAAI;YACjBC,UAAU,EAAE,SAAZA,UAAUA,CAAAS,KAAA;cAAA,IAAKP,KAAK,GAAAO,KAAA,CAALP,KAAK;gBAAEC,IAAI,GAAAM,KAAA,CAAJN,IAAI;cAAA,OACxB7C,IAAA,CAACX,IAAI;gBAAC6B,KAAK,EAAE,CAACC,MAAM,CAAC2B,IAAI,EAAE;kBAAEf,eAAe,EAAEa;gBAAM,CAAC;cAAE,CAAE,CAAC;YAAA;UAE9D;QAAE,CACH,CAAC;MAAA,CACW;IAAC,CACG,CAAC,EAGtB5C,IAAA,CAACR,gBAAgB;MACf0B,KAAK,EAAE,CACLC,MAAM,CAACiC,aAAa,EACpB;QAAErB,eAAe,EAAEzB,KAAK,CAACmB,MAAM,CAAC4B;MAAQ,CAAC,EACzC5D,QAAQ,CAAC6D,EAAE,KAAK,KAAK,IAAInC,MAAM,CAACoC,gBAAgB,CAChD;MACFC,OAAO,EAAExC,aAAc;MACvByC,aAAa,EAAE,GAAI;MAAApC,QAAA,EAEnBrB,IAAA,CAACX,IAAI;QAAC6B,KAAK,EAAEC,MAAM,CAACuC;MAAY,CAAE;IAAC,CACnB,CAAC;EAAA,CACf,CAAC;AAET;AAEA,IAAMvC,MAAM,GAAG5B,UAAU,CAACoE,MAAM,CAAC;EAC/BvC,SAAS,EAAE;IACTwC,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC;EACD/B,MAAM,EAAE;IACNgC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,CAAC;IAChBC,UAAU,EAAE;EACd,CAAC;EACDlB,IAAI,EAAE;IACJmB,KAAK,EAAE,EAAE;IACTH,MAAM,EAAE,EAAE;IACVI,YAAY,EAAE;EAChB,CAAC;EACDd,aAAa,EAAE;IACbS,QAAQ,EAAE,UAAU;IACpBM,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVH,KAAK,EAAE,EAAE;IACTH,MAAM,EAAE,EAAE;IACVI,YAAY,EAAE,EAAE;IAChBnC,eAAe,EAAE,SAAS;IAC1BsC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACZR,KAAK,EAAE,CAAC;MACRH,MAAM,EAAE;IACV,CAAC;IACDY,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDpB,gBAAgB,EAAE;IAChBqB,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACb,CAAC;EACDnB,WAAW,EAAE;IACXO,KAAK,EAAE,EAAE;IACTH,MAAM,EAAE,EAAE;IACVI,YAAY,EAAE,EAAE;IAChBnC,eAAe,EAAE;EAEnB;AACF,CAAC,CAAC;AAGF,SAAS+C,GAAGA,CAAA,EAAG;EACb,OACE9E,IAAA,CAACH,aAAa;IAAAwB,QAAA,EACZrB,IAAA,CAACI,aAAa,IAAE;EAAC,CACJ,CAAC;AAEpB;AAEA,eAAe0E,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}