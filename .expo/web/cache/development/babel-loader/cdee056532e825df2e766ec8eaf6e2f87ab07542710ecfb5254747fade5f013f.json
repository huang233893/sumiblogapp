{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WebViewComponent = function WebViewComponent(_ref) {\n  var url = _ref.url;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var rotateAnim = useRef(new Animated.Value(0)).current;\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var fadeAnim = useRef(new Animated.Value(1)).current;\n  useEffect(function () {\n    setIsLoading(true);\n    rotateAnim.setValue(0);\n    scaleAnim.setValue(1);\n    fadeAnim.setValue(1);\n    var rotateAnimation = Animated.loop(Animated.timing(rotateAnim, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true\n    }));\n    var scaleAnimation = Animated.loop(Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 1.2,\n      duration: 800,\n      useNativeDriver: true\n    }), Animated.timing(scaleAnim, {\n      toValue: 0.9,\n      duration: 800,\n      useNativeDriver: true\n    })]));\n    rotateAnimation.start();\n    scaleAnimation.start();\n    var timer = setTimeout(function () {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 600,\n        useNativeDriver: true\n      }).start(function () {\n        setIsLoading(false);\n      });\n    }, 1500);\n    return function () {\n      clearTimeout(timer);\n      rotateAnimation.stop();\n      scaleAnimation.stop();\n      fadeAnim.stopAnimation();\n    };\n  }, [url, rotateAnim, scaleAnim, fadeAnim]);\n  var spin = rotateAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg']\n  });\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [isLoading && _jsxs(Animated.View, {\n      style: [styles.loadingContainer, {\n        opacity: fadeAnim\n      }],\n      children: [_jsx(Animated.View, {\n        style: [styles.animatedContainer, {\n          transform: [{\n            rotate: spin\n          }, {\n            scale: scaleAnim\n          }]\n        }],\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: theme.colors.primary\n        })\n      }), _jsx(Text, {\n        style: [styles.loadingText, {\n          color: theme.colors.textSecondary\n        }],\n        children: \"\\u6B63\\u5728\\u52A0\\u8F7D\\u5185\\u5BB9...\"\n      })]\n    }), _jsx(View, {\n      style: [styles.contentContainer, {\n        opacity: isLoading ? 0 : 1\n      }],\n      children: _jsx(Text, {\n        style: [styles.contentText, {\n          color: theme.colors.textSecondary\n        }],\n        children: \"Web\\u5185\\u5BB9\\u52A0\\u8F7D\\u5B8C\\u6210\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  animatedContainer: {\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contentText: {\n    fontSize: 16\n  }\n});\nexport default WebViewComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","ActivityIndicator","Text","StyleSheet","Animated","useTheme","jsx","_jsx","jsxs","_jsxs","WebViewComponent","_ref","url","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useTheme","theme","rotateAnim","Value","current","scaleAnim","fadeAnim","setValue","rotateAnimation","loop","timing","toValue","duration","useNativeDriver","scaleAnimation","sequence","start","timer","setTimeout","clearTimeout","stop","stopAnimation","spin","interpolate","inputRange","outputRange","style","styles","container","backgroundColor","colors","background","children","loadingContainer","opacity","animatedContainer","transform","rotate","scale","size","color","primary","loadingText","textSecondary","contentContainer","contentText","create","flex","position","top","left","right","bottom","justifyContent","alignItems","zIndex","padding","marginTop","fontSize"],"sources":["D:/sumiblogapph5/src/components/WebViewComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { View, ActivityIndicator, Text, StyleSheet, Animated } from 'react-native';\nimport { useTheme } from '../contexts/ThemeContext';\n\nconst WebViewComponent = ({ url }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const { theme } = useTheme();\n  \n  // 动画值\n  const rotateAnim = useRef(new Animated.Value(0)).current;\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n  const fadeAnim = useRef(new Animated.Value(1)).current;\n\n  useEffect(() => {\n    setIsLoading(true);\n    \n    // 重置动画并启动\n    rotateAnim.setValue(0);\n    scaleAnim.setValue(1);\n    fadeAnim.setValue(1);\n    \n    // 启动旋转动画\n    const rotateAnimation = Animated.loop(\n      Animated.timing(rotateAnim, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true,\n      })\n    );\n    \n    // 启动缩放动画\n    const scaleAnimation = Animated.loop(\n      Animated.sequence([\n        Animated.timing(scaleAnim, {\n          toValue: 1.2,\n          duration: 800,\n          useNativeDriver: true,\n        }),\n        Animated.timing(scaleAnim, {\n          toValue: 0.9,\n          duration: 800,\n          useNativeDriver: true,\n        })\n      ])\n    );\n    \n    rotateAnimation.start();\n    scaleAnimation.start();\n    \n    // 模拟加载完成\n    const timer = setTimeout(() => {\n      // 淡出动画\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 600,\n        useNativeDriver: true,\n      }).start(() => {\n        setIsLoading(false);\n      });\n    }, 1500);\n\n    return () => {\n      clearTimeout(timer);\n      // 清理动画\n      rotateAnimation.stop();\n      scaleAnimation.stop();\n      fadeAnim.stopAnimation();\n    };\n  }, [url, rotateAnim, scaleAnim, fadeAnim]);\n\n  // 计算旋转插值\n  const spin = rotateAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg']\n  });\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      {isLoading && (\n        <Animated.View \n          style={[\n            styles.loadingContainer, \n            { opacity: fadeAnim }\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.animatedContainer,\n              {\n                transform: [\n                  { rotate: spin },\n                  { scale: scaleAnim }\n                ]\n              }\n            ]}\n          >\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          </Animated.View>\n          <Text style={[styles.loadingText, { color: theme.colors.textSecondary }]}>\n            正在加载内容...\n          </Text>\n        </Animated.View>\n      )}\n      <View style={[styles.contentContainer, { opacity: isLoading ? 0 : 1 }]}>\n        <Text style={[styles.contentText, { color: theme.colors.textSecondary }]}>\n          Web内容加载完成\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  animatedContainer: {\n    padding: 20\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contentText: {\n    fontSize: 16\n  }\n});\n\nexport default WebViewComponent;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAE3D,SAASC,QAAQ;AAAmC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAgB;EAAA,IAAVC,GAAG,GAAAD,IAAA,CAAHC,GAAG;EAC7B,IAAAC,SAAA,GAAkChB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,SAAA,GAAkBb,QAAQ,CAAC,CAAC;IAApBc,KAAK,GAAAD,SAAA,CAALC,KAAK;EAGb,IAAMC,UAAU,GAAGrB,MAAM,CAAC,IAAIK,QAAQ,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACxD,IAAMC,SAAS,GAAGxB,MAAM,CAAC,IAAIK,QAAQ,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACvD,IAAME,QAAQ,GAAGzB,MAAM,CAAC,IAAIK,QAAQ,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAEtDxB,SAAS,CAAC,YAAM;IACdmB,YAAY,CAAC,IAAI,CAAC;IAGlBG,UAAU,CAACK,QAAQ,CAAC,CAAC,CAAC;IACtBF,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC;IACrBD,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC;IAGpB,IAAMC,eAAe,GAAGtB,QAAQ,CAACuB,IAAI,CACnCvB,QAAQ,CAACwB,MAAM,CAACR,UAAU,EAAE;MAC1BS,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACnB,CAAC,CACH,CAAC;IAGD,IAAMC,cAAc,GAAG5B,QAAQ,CAACuB,IAAI,CAClCvB,QAAQ,CAAC6B,QAAQ,CAAC,CAChB7B,QAAQ,CAACwB,MAAM,CAACL,SAAS,EAAE;MACzBM,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,EACF3B,QAAQ,CAACwB,MAAM,CAACL,SAAS,EAAE;MACzBM,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CACH,CAAC;IAEDL,eAAe,CAACQ,KAAK,CAAC,CAAC;IACvBF,cAAc,CAACE,KAAK,CAAC,CAAC;IAGtB,IAAMC,KAAK,GAAGC,UAAU,CAAC,YAAM;MAE7BhC,QAAQ,CAACwB,MAAM,CAACJ,QAAQ,EAAE;QACxBK,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,GAAG;QACbC,eAAe,EAAE;MACnB,CAAC,CAAC,CAACG,KAAK,CAAC,YAAM;QACbjB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,YAAM;MACXoB,YAAY,CAACF,KAAK,CAAC;MAEnBT,eAAe,CAACY,IAAI,CAAC,CAAC;MACtBN,cAAc,CAACM,IAAI,CAAC,CAAC;MACrBd,QAAQ,CAACe,aAAa,CAAC,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,CAAC3B,GAAG,EAAEQ,UAAU,EAAEG,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAG1C,IAAMgB,IAAI,GAAGpB,UAAU,CAACqB,WAAW,CAAC;IAClCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAAC,MAAM,EAAE,QAAQ;EAChC,CAAC,CAAC;EAEF,OACElC,KAAA,CAACT,IAAI;IAAC4C,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;MAAEC,eAAe,EAAE5B,KAAK,CAAC6B,MAAM,CAACC;IAAW,CAAC,CAAE;IAAAC,QAAA,GAC3ElC,SAAS,IACRP,KAAA,CAACL,QAAQ,CAACJ,IAAI;MACZ4C,KAAK,EAAE,CACLC,MAAM,CAACM,gBAAgB,EACvB;QAAEC,OAAO,EAAE5B;MAAS,CAAC,CACrB;MAAA0B,QAAA,GAEF3C,IAAA,CAACH,QAAQ,CAACJ,IAAI;QACZ4C,KAAK,EAAE,CACLC,MAAM,CAACQ,iBAAiB,EACxB;UACEC,SAAS,EAAE,CACT;YAAEC,MAAM,EAAEf;UAAK,CAAC,EAChB;YAAEgB,KAAK,EAAEjC;UAAU,CAAC;QAExB,CAAC,CACD;QAAA2B,QAAA,EAEF3C,IAAA,CAACN,iBAAiB;UAACwD,IAAI,EAAC,OAAO;UAACC,KAAK,EAAEvC,KAAK,CAAC6B,MAAM,CAACW;QAAQ,CAAE;MAAC,CAClD,CAAC,EAChBpD,IAAA,CAACL,IAAI;QAAC0C,KAAK,EAAE,CAACC,MAAM,CAACe,WAAW,EAAE;UAAEF,KAAK,EAAEvC,KAAK,CAAC6B,MAAM,CAACa;QAAc,CAAC,CAAE;QAAAX,QAAA,EAAC;MAE1E,CAAM,CAAC;IAAA,CACM,CAChB,EACD3C,IAAA,CAACP,IAAI;MAAC4C,KAAK,EAAE,CAACC,MAAM,CAACiB,gBAAgB,EAAE;QAAEV,OAAO,EAAEpC,SAAS,GAAG,CAAC,GAAG;MAAE,CAAC,CAAE;MAAAkC,QAAA,EACrE3C,IAAA,CAACL,IAAI;QAAC0C,KAAK,EAAE,CAACC,MAAM,CAACkB,WAAW,EAAE;UAAEL,KAAK,EAAEvC,KAAK,CAAC6B,MAAM,CAACa;QAAc,CAAC,CAAE;QAAAX,QAAA,EAAC;MAE1E,CAAM;IAAC,CACH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAML,MAAM,GAAG1C,UAAU,CAAC6D,MAAM,CAAC;EAC/BlB,SAAS,EAAE;IACTmB,IAAI,EAAE;EACR,CAAC;EACDd,gBAAgB,EAAE;IAChBe,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE;EACV,CAAC;EACDpB,iBAAiB,EAAE;IACjBqB,OAAO,EAAE;EACX,CAAC;EACDd,WAAW,EAAE;IACXe,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDd,gBAAgB,EAAE;IAChBG,IAAI,EAAE,CAAC;IACPM,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDT,WAAW,EAAE;IACXa,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAelE,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}