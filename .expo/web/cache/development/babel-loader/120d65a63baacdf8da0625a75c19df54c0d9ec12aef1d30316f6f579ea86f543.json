{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WebViewComponent = function WebViewComponent(_ref) {\n  var url = _ref.url;\n  if (Platform.OS === 'web') {\n    return _jsx(View, {\n      style: styles.webview,\n      children: _jsx(\"iframe\", {\n        src: url,\n        style: {\n          width: '100%',\n          height: '100%',\n          border: 'none'\n        },\n        title: \"Web Content\"\n      })\n    });\n  }\n  try {\n    var _require = require('react-native-webview'),\n      WebView = _require.WebView;\n    return _jsx(WebView, {\n      source: {\n        uri: url\n      },\n      style: styles.webview,\n      javaScriptEnabled: true,\n      domStorageEnabled: true,\n      startInLoadingState: true,\n      scalesPageToFit: true\n    });\n  } catch (error) {\n    return _jsx(View, {\n      style: styles.errorContainer,\n      children: _jsx(Text, {\n        style: styles.errorText,\n        children: \"\\u65E0\\u6CD5\\u52A0\\u8F7DWebView\\u7EC4\\u4EF6\"\n      })\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  webview: {\n    flex: 1\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#666'\n  }\n});\nexport default WebViewComponent;","map":{"version":3,"names":["React","StyleSheet","Platform","View","Text","jsx","_jsx","WebViewComponent","_ref","url","OS","style","styles","webview","children","src","width","height","border","title","_require","require","WebView","source","uri","javaScriptEnabled","domStorageEnabled","startInLoadingState","scalesPageToFit","error","errorContainer","errorText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","color"],"sources":["D:/sumiblogapph5/src/components/WebViewComponent.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Platform, View, Text } from 'react-native';\n\nconst WebViewComponent = ({ url }) => {\n  // 在Web平台上使用iframe作为React Native WebView的替代\n  if (Platform.OS === 'web') {\n    return (\n      <View style={styles.webview}>\n        <iframe \n          src={url} \n          style={{ width: '100%', height: '100%', border: 'none' }}\n          title=\"Web Content\"\n        />\n      </View>\n    );\n  }\n  \n  // 在原生平台上使用WebView\n  try {\n    const { WebView } = require('react-native-webview');\n    return (\n      <WebView\n        source={{ uri: url }}\n        style={styles.webview}\n        javaScriptEnabled={true}\n        domStorageEnabled={true}\n        startInLoadingState={true}\n        scalesPageToFit={true}\n      />\n    );\n  } catch (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>无法加载WebView组件</Text>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  webview: {\n    flex: 1,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#666',\n  },\n});\n\nexport default WebViewComponent;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG1B,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAgB;EAAA,IAAVC,GAAG,GAAAD,IAAA,CAAHC,GAAG;EAE7B,IAAIP,QAAQ,CAACQ,EAAE,KAAK,KAAK,EAAE;IACzB,OACEJ,IAAA,CAACH,IAAI;MAACQ,KAAK,EAAEC,MAAM,CAACC,OAAQ;MAAAC,QAAA,EAC1BR,IAAA;QACES,GAAG,EAAEN,GAAI;QACTE,KAAK,EAAE;UAAEK,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE;QACzDC,KAAK,EAAC;MAAa,CACpB;IAAC,CACE,CAAC;EAEX;EAGA,IAAI;IACF,IAAAC,QAAA,GAAoBC,OAAO,CAAC,sBAAsB,CAAC;MAA3CC,OAAO,GAAAF,QAAA,CAAPE,OAAO;IACf,OACEhB,IAAA,CAACgB,OAAO;MACNC,MAAM,EAAE;QAAEC,GAAG,EAAEf;MAAI,CAAE;MACrBE,KAAK,EAAEC,MAAM,CAACC,OAAQ;MACtBY,iBAAiB,EAAE,IAAK;MACxBC,iBAAiB,EAAE,IAAK;MACxBC,mBAAmB,EAAE,IAAK;MAC1BC,eAAe,EAAE;IAAK,CACvB,CAAC;EAEN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OACEvB,IAAA,CAACH,IAAI;MAACQ,KAAK,EAAEC,MAAM,CAACkB,cAAe;MAAAhB,QAAA,EACjCR,IAAA,CAACF,IAAI;QAACO,KAAK,EAAEC,MAAM,CAACmB,SAAU;QAAAjB,QAAA,EAAC;MAAa,CAAM;IAAC,CAC/C,CAAC;EAEX;AACF,CAAC;AAED,IAAMF,MAAM,GAAGX,UAAU,CAAC+B,MAAM,CAAC;EAC/BnB,OAAO,EAAE;IACPoB,IAAI,EAAE;EACR,CAAC;EACDH,cAAc,EAAE;IACdG,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDL,SAAS,EAAE;IACTM,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe/B,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}